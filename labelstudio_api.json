{"swagger": "2.0", "info": {"title": "Label Studio API", "contact": {"url": "https://labelstud.io"}, "x-logo": {"url": "../../static/icons/logo-black.svg"}, "version": "v1.14.0"}, "host": "3.231.25.136", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Token": {"type": "apiKey", "name": "Authorization", "in": "header", "description": "The token (or API key) must be passed as a request header. You can find your user token on the User Account page in Label Studio. Example: <br><pre><code class=\"language-bash\">curl https://label-studio-host/api/projects -H \"Authorization: Token [your-token]\"</code></pre>"}}, "security": [{"Token": []}], "paths": {"/api/annotations/{id}/": {"get": {"operationId": "api_annotations_read", "summary": "Get annotation by its ID", "description": "Retrieve a specific annotation for a task using the annotation result ID.", "parameters": [], "responses": {"200": {"description": "Retrieved annotation", "schema": {"$ref": "#/definitions/Annotation"}, "examples": {"application/json": {"id": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "task": 1, "project": 1, "completed_by": 1, "updated_by": 1, "was_cancelled": false, "ground_truth": false, "lead_time": 10}}}}, "tags": ["Annotations"], "x-fern-sdk-group-name": "annotations", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_annotations_partial_update", "summary": "Update annotation", "description": "Update existing attributes on an annotation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"result": {"description": "Labeling result in JSON format. Read more about the format in [the Label Studio documentation.](https://labelstud.io/guide/task_format)", "type": "array", "items": {"type": "object"}, "example": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}]}, "task": {"description": "Corresponding task for this annotation", "type": "integer"}, "project": {"description": "Project ID for this annotation", "type": "integer"}, "completed_by": {"description": "User ID of the person who created this annotation", "type": "integer"}, "updated_by": {"description": "Last user who updated this annotation", "type": "integer"}, "was_cancelled": {"description": "User skipped the task", "type": "boolean"}, "ground_truth": {"description": "This annotation is a Ground Truth", "type": "boolean"}, "lead_time": {"description": "How much time it took to annotate the task (in seconds)", "type": "number", "example": 100.5}}, "example": {"result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "was_cancelled": false, "ground_truth": true}}}], "responses": {"200": {"description": "Updated annotation", "schema": {"$ref": "#/definitions/Annotation"}, "examples": {"application/json": {"id": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "task": 1, "project": 1, "completed_by": 1, "updated_by": 1, "was_cancelled": false, "ground_truth": false, "lead_time": 10}}}}, "tags": ["Annotations"], "x-fern-sdk-group-name": "annotations", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_annotations_delete", "summary": "Delete annotation", "description": "Delete an annotation. This action can't be undone!", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Annotations"], "x-fern-sdk-group-name": "annotations", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this annotation.", "required": true, "type": "integer"}]}, "/api/annotations/{id}/convert-to-draft": {"post": {"operationId": "api_annotations_convert-to-draft_create", "summary": "Convert annotation to draft", "description": "Convert annotation to draft", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["Annotations"], "x-fern-audiences": ["internal"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this annotation.", "required": true, "type": "integer"}]}, "/api/current-user/reset-token/": {"post": {"operationId": "api_current-user_reset-token_create", "summary": "Reset user token", "description": "Reset the user token for the current user.", "parameters": [], "responses": {"201": {"description": "User token response", "schema": {"description": "User token", "type": "object", "properties": {"token": {"description": "Token", "type": "string"}}}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "reset_token", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/current-user/token": {"get": {"operationId": "api_current-user_token_list", "summary": "Get user token", "description": "Get a user token to authenticate to the API as the current user.", "parameters": [], "responses": {"200": {"description": "User token response", "schema": {"description": "User token", "type": "object", "properties": {"detail": {"description": "Token", "type": "string"}}}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "get_token", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/current-user/whoami": {"get": {"operationId": "api_current-user_whoami_read", "summary": "Retrieve my user", "description": "Retrieve details of the account that you are using to access the API.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BaseUser"}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "whoami", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/dm/actions/": {"get": {"operationId": "api_dm_actions_list", "summary": "Get actions", "description": "Retrieve all the registered actions with descriptions that data manager can use.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "actions", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_dm_actions_create", "summary": "Post actions", "description": "Perform a Data Manager action with the selected tasks and filters. Note: More complex actions require additional parameters in the request body. Call `GET api/actions?project=<id>` to explore them. <br>Example: `GET api/actions?id=delete_tasks&project=1`", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"description": "Data payload containing task filters, selected task items, and ordering", "type": "object", "properties": {"filters": {"description": "Filters to apply on tasks. You can use [the helper class `Filters` from this page](https://labelstud.io/sdk/data_manager.html) to create Data Manager Filters.<br>Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`", "required": ["conjunction", "items"], "type": "object", "properties": {"conjunction": {"description": "Logical conjunction for the filters. This conjunction (either \"or\" or \"and\") will be applied to all items in the filters list. It is not possible to combine \"or\" and \"and\" within one list of filters. All filters will be either combined with \"or\" or with \"and\", but not a mix of both.", "type": "string", "enum": ["or", "and"]}, "items": {"description": "List of filter items", "type": "array", "items": {"required": ["filter", "operator", "type", "value"], "type": "object", "properties": {"filter": {"description": "Filter identifier, it should start with `filter:tasks:` prefix, e.g. `filter:tasks:agreement`. For `task.data` fields it may look like `filter:tasks:data.field_name`. If you need more info about columns, check the [Get data manager columns](#tag/Data-Manager/operation/api_dm_columns_list) API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br> (Number) Agreement for annotation results for a specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br> (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br> (List) Annotators that completed the task (Community). Can include assigned annotators (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br> (Number) Number of cancelled or skipped annotations for the task</li><br><li>`filter:tasks:comments`<br> (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br> (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br> (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br> (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br> (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br> (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br> (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br> (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br> (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br> (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br> (Boolean) Whether the tasks have been reviewed (Enterprise only)</li><br><li>`filter:tasks:reviewers`<br> (String) Reviewers that reviewed the task, or assigned reviewers (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br> (Number) Number of annotations accepted for a task in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br> (Number) Number of annotations rejected for a task in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br> (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br> (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br> (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br> (Datetime) Time the task was updated at (e.g. new annotation was created, review added, etc)</li>", "type": "string", "enum": ["filter:tasks:agreement", "filter:tasks:annotations_results", "filter:tasks:annotators", "filter:tasks:cancelled_annotations", "filter:tasks:comments", "filter:tasks:completed_at", "filter:tasks:created_at", "filter:tasks:file_upload", "filter:tasks:ground_truth", "filter:tasks:id", "filter:tasks:inner_id", "filter:tasks:predictions_model_versions", "filter:tasks:predictions_results", "filter:tasks:predictions_score", "filter:tasks:reviewed", "filter:tasks:reviewers", "filter:tasks:reviews_accepted", "filter:tasks:reviews_rejected", "filter:tasks:total_annotations", "filter:tasks:total_predictions", "filter:tasks:unresolved_comment_count", "filter:tasks:updated_at"]}, "operator": {"description": "Filter operator. Possible values:<br><li>`contains`<br> Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br> Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br> Greater than</li><br><li>`greater_or_equal`<br> Greater than or equal to</li><br><li>`in`<br> Is between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br> Less than or equal to</li><br><li>`not_contains`<br> Does not contain</li><br><li>`not_equal`<br> Not equal to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br> Is not between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`starts_with`<br> Starts with</li>", "type": "string", "enum": ["contains", "ends_with", "equal", "exists", "greater", "greater_or_equal", "in", "less", "less_or_equal", "not_contains", "not_equal", "not_exists", "not_in", "starts_with"]}, "type": {"description": "Type of the filter value. Possible values:<br><li>`Boolean`<br> Boolean</li><br><li>`Datetime`<br> Datetime string in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br> List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br> Unknown is explicitly converted to string format</li>", "type": "string"}, "value": {"description": "Value to filter by", "type": "object", "oneOf": [{"title": "String", "description": "String", "type": "string"}, {"title": "Integer", "description": "Integer", "type": "integer"}, {"title": "Float", "description": "Float", "type": "number", "format": "float"}, {"title": "Boolean", "description": "Boolean", "type": "boolean"}, {"title": "Dictionary", "description": "Dictionary is used for some operator types, e.g. `in` and `not_in`", "type": "object"}, {"title": "List", "description": "List of strings or integers", "type": "object"}]}}, "example": {"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}}}}}, "selectedItems": {"description": "Task selection by IDs. If filters are applied, the selection will be applied to the filtered tasks.If \"all\" is `false`, `\"included\"` must be used. If \"all\" is `true`, `\"excluded\"` must be used.<br>Examples: `{\"all\": false, \"included\": [1, 2, 3]}` or `{\"all\": true, \"excluded\": [4, 5]}`", "required": ["all"], "type": "object", "oneOf": [{"title": "all: false", "required": ["all"], "type": "object", "properties": {"all": {"description": "No tasks are selected", "type": "boolean", "enum": [false]}, "included": {"description": "List of included task IDs", "type": "array", "items": {"type": "integer"}}}}, {"title": "all: true", "required": ["all"], "type": "object", "properties": {"all": {"description": "All tasks are selected", "type": "boolean", "enum": [true]}, "excluded": {"description": "List of excluded task IDs", "type": "array", "items": {"type": "integer"}}}}]}, "ordering": {"description": "List of fields to order by. Fields are similar to filters but without the `filter:` prefix. To reverse the order, add a minus sign before the field name, e.g. `-tasks:created_at`.", "type": "array", "items": {"type": "string", "enum": ["tasks:agreement", "tasks:annotations_results", "tasks:annotators", "tasks:cancelled_annotations", "tasks:comments", "tasks:completed_at", "tasks:created_at", "tasks:file_upload", "tasks:ground_truth", "tasks:id", "tasks:inner_id", "tasks:predictions_model_versions", "tasks:predictions_results", "tasks:predictions_score", "tasks:reviewed", "tasks:reviewers", "tasks:reviews_accepted", "tasks:reviews_rejected", "tasks:total_annotations", "tasks:total_predictions", "tasks:unresolved_comment_count", "tasks:updated_at"]}}}, "example": {"filters": {"conjunction": "or", "items": [{"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}]}, "selectedItems": {"all": true, "excluded": [124, 125, 126]}, "ordering": ["tasks:total_annotations"]}}}, {"name": "id", "in": "query", "description": "Action name ID, see the full list of actions in the `GET api/actions` request", "required": true, "type": "string", "enum": ["retrieve_tasks_predictions", "predictions_to_annotations", "remove_duplicates", "delete_tasks", "delete_ground_truths", "delete_tasks_annotations", "delete_tasks_reviews", "delete_tasks_predictions", "delete_reviewers", "delete_annotators"], "example": "delete_tasks"}, {"name": "project", "in": "query", "description": "Project ID", "required": true, "type": "integer"}, {"name": "view", "in": "query", "description": "View ID (optional, it has higher priority than filters, selectedItems and ordering from the request body payload)", "type": "integer"}], "responses": {"200": {"description": "Action performed successfully"}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "actions", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/dm/columns/": {"get": {"operationId": "api_dm_columns_list", "summary": "Get data manager columns", "description": "Retrieve the data manager columns available for the tasks in a specific project. For more details, see [GET api/actions](#/Data%20Manager/get_api_actions).", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Columns retrieved successfully", "examples": {"application/json": {"columns": [{"id": "id", "title": "ID", "type": "Number", "help": "Task ID", "target": "tasks", "visibility_defaults": {"explore": true, "labeling": false}, "project_defined": false}, {"id": "completed_at", "title": "Completed", "type": "Datetime", "target": "tasks", "help": "Last annotation date", "visibility_defaults": {"explore": true, "labeling": false}, "project_defined": false}]}}}, "400": {"description": "Invalid project ID supplied"}, "404": {"description": "Project not found"}}, "tags": ["Data Manager"], "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/dm/project/": {"get": {"operationId": "api_dm_project_list", "summary": "Get project state", "description": "Retrieve the project state for the data manager.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["Data Manager"], "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/dm/views/": {"get": {"operationId": "api_dm_views_list", "summary": "List views", "description": "List all views for a specific project.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/View"}}}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_dm_views_create", "summary": "Create view", "description": "Create a view for a specific project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"data": {"description": "Custom view data", "type": "object", "properties": {"filters": {"description": "Filters to apply on tasks. You can use [the helper class `Filters` from this page](https://labelstud.io/sdk/data_manager.html) to create Data Manager Filters.<br>Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`", "required": ["conjunction", "items"], "type": "object", "properties": {"conjunction": {"description": "Logical conjunction for the filters. This conjunction (either \"or\" or \"and\") will be applied to all items in the filters list. It is not possible to combine \"or\" and \"and\" within one list of filters. All filters will be either combined with \"or\" or with \"and\", but not a mix of both.", "type": "string", "enum": ["or", "and"]}, "items": {"description": "List of filter items", "type": "array", "items": {"required": ["filter", "operator", "type", "value"], "type": "object", "properties": {"filter": {"description": "Filter identifier, it should start with `filter:tasks:` prefix, e.g. `filter:tasks:agreement`. For `task.data` fields it may look like `filter:tasks:data.field_name`. If you need more info about columns, check the [Get data manager columns](#tag/Data-Manager/operation/api_dm_columns_list) API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br> (Number) Agreement for annotation results for a specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br> (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br> (List) Annotators that completed the task (Community). Can include assigned annotators (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br> (Number) Number of cancelled or skipped annotations for the task</li><br><li>`filter:tasks:comments`<br> (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br> (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br> (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br> (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br> (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br> (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br> (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br> (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br> (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br> (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br> (Boolean) Whether the tasks have been reviewed (Enterprise only)</li><br><li>`filter:tasks:reviewers`<br> (String) Reviewers that reviewed the task, or assigned reviewers (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br> (Number) Number of annotations accepted for a task in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br> (Number) Number of annotations rejected for a task in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br> (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br> (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br> (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br> (Datetime) Time the task was updated at (e.g. new annotation was created, review added, etc)</li>", "type": "string", "enum": ["filter:tasks:agreement", "filter:tasks:annotations_results", "filter:tasks:annotators", "filter:tasks:cancelled_annotations", "filter:tasks:comments", "filter:tasks:completed_at", "filter:tasks:created_at", "filter:tasks:file_upload", "filter:tasks:ground_truth", "filter:tasks:id", "filter:tasks:inner_id", "filter:tasks:predictions_model_versions", "filter:tasks:predictions_results", "filter:tasks:predictions_score", "filter:tasks:reviewed", "filter:tasks:reviewers", "filter:tasks:reviews_accepted", "filter:tasks:reviews_rejected", "filter:tasks:total_annotations", "filter:tasks:total_predictions", "filter:tasks:unresolved_comment_count", "filter:tasks:updated_at"]}, "operator": {"description": "Filter operator. Possible values:<br><li>`contains`<br> Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br> Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br> Greater than</li><br><li>`greater_or_equal`<br> Greater than or equal to</li><br><li>`in`<br> Is between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br> Less than or equal to</li><br><li>`not_contains`<br> Does not contain</li><br><li>`not_equal`<br> Not equal to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br> Is not between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`starts_with`<br> Starts with</li>", "type": "string", "enum": ["contains", "ends_with", "equal", "exists", "greater", "greater_or_equal", "in", "less", "less_or_equal", "not_contains", "not_equal", "not_exists", "not_in", "starts_with"]}, "type": {"description": "Type of the filter value. Possible values:<br><li>`Boolean`<br> Boolean</li><br><li>`Datetime`<br> Datetime string in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br> List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br> Unknown is explicitly converted to string format</li>", "type": "string"}, "value": {"description": "Value to filter by", "type": "object", "oneOf": [{"title": "String", "description": "String", "type": "string"}, {"title": "Integer", "description": "Integer", "type": "integer"}, {"title": "Float", "description": "Float", "type": "number", "format": "float"}, {"title": "Boolean", "description": "Boolean", "type": "boolean"}, {"title": "Dictionary", "description": "Dictionary is used for some operator types, e.g. `in` and `not_in`", "type": "object"}, {"title": "List", "description": "List of strings or integers", "type": "object"}]}}, "example": {"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}}}}}, "ordering": {"description": "List of fields to order by. Fields are similar to filters but without the `filter:` prefix. To reverse the order, add a minus sign before the field name, e.g. `-tasks:created_at`.", "type": "array", "items": {"type": "string", "enum": ["tasks:agreement", "tasks:annotations_results", "tasks:annotators", "tasks:cancelled_annotations", "tasks:comments", "tasks:completed_at", "tasks:created_at", "tasks:file_upload", "tasks:ground_truth", "tasks:id", "tasks:inner_id", "tasks:predictions_model_versions", "tasks:predictions_results", "tasks:predictions_score", "tasks:reviewed", "tasks:reviewers", "tasks:reviews_accepted", "tasks:reviews_rejected", "tasks:total_annotations", "tasks:total_predictions", "tasks:unresolved_comment_count", "tasks:updated_at"]}}}}, "project": {"description": "Project ID", "type": "integer"}}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/View"}}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/dm/views/order/": {"post": {"operationId": "api_dm_views_update_order", "summary": "Update order of views", "description": "Update the order field of views based on the provided list of view IDs", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ViewOrder"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ViewOrder"}}}, "tags": ["Data Manager"]}, "parameters": []}, "/api/dm/views/reset/": {"delete": {"operationId": "api_dm_views_reset", "summary": "Delete all project views", "description": "Delete all views for a specific project", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ViewReset"}}], "responses": {"204": {"description": ""}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "delete_all", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/dm/views/{id}/": {"get": {"operationId": "api_dm_views_read", "summary": "Get view details", "description": "Get the details about a specific view in the data manager", "parameters": [{"name": "id", "in": "path", "description": "View ID", "type": "string", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/View"}}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "put": {"operationId": "api_dm_views_update", "summary": "Put view", "description": "Overwrite view data with updated filters and other information for a specific project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"data": {"description": "Custom view data", "type": "object", "properties": {"filters": {"description": "Filters to apply on tasks. You can use [the helper class `Filters` from this page](https://labelstud.io/sdk/data_manager.html) to create Data Manager Filters.<br>Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`", "required": ["conjunction", "items"], "type": "object", "properties": {"conjunction": {"description": "Logical conjunction for the filters. This conjunction (either \"or\" or \"and\") will be applied to all items in the filters list. It is not possible to combine \"or\" and \"and\" within one list of filters. All filters will be either combined with \"or\" or with \"and\", but not a mix of both.", "type": "string", "enum": ["or", "and"]}, "items": {"description": "List of filter items", "type": "array", "items": {"required": ["filter", "operator", "type", "value"], "type": "object", "properties": {"filter": {"description": "Filter identifier, it should start with `filter:tasks:` prefix, e.g. `filter:tasks:agreement`. For `task.data` fields it may look like `filter:tasks:data.field_name`. If you need more info about columns, check the [Get data manager columns](#tag/Data-Manager/operation/api_dm_columns_list) API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br> (Number) Agreement for annotation results for a specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br> (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br> (List) Annotators that completed the task (Community). Can include assigned annotators (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br> (Number) Number of cancelled or skipped annotations for the task</li><br><li>`filter:tasks:comments`<br> (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br> (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br> (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br> (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br> (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br> (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br> (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br> (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br> (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br> (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br> (Boolean) Whether the tasks have been reviewed (Enterprise only)</li><br><li>`filter:tasks:reviewers`<br> (String) Reviewers that reviewed the task, or assigned reviewers (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br> (Number) Number of annotations accepted for a task in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br> (Number) Number of annotations rejected for a task in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br> (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br> (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br> (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br> (Datetime) Time the task was updated at (e.g. new annotation was created, review added, etc)</li>", "type": "string", "enum": ["filter:tasks:agreement", "filter:tasks:annotations_results", "filter:tasks:annotators", "filter:tasks:cancelled_annotations", "filter:tasks:comments", "filter:tasks:completed_at", "filter:tasks:created_at", "filter:tasks:file_upload", "filter:tasks:ground_truth", "filter:tasks:id", "filter:tasks:inner_id", "filter:tasks:predictions_model_versions", "filter:tasks:predictions_results", "filter:tasks:predictions_score", "filter:tasks:reviewed", "filter:tasks:reviewers", "filter:tasks:reviews_accepted", "filter:tasks:reviews_rejected", "filter:tasks:total_annotations", "filter:tasks:total_predictions", "filter:tasks:unresolved_comment_count", "filter:tasks:updated_at"]}, "operator": {"description": "Filter operator. Possible values:<br><li>`contains`<br> Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br> Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br> Greater than</li><br><li>`greater_or_equal`<br> Greater than or equal to</li><br><li>`in`<br> Is between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br> Less than or equal to</li><br><li>`not_contains`<br> Does not contain</li><br><li>`not_equal`<br> Not equal to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br> Is not between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`starts_with`<br> Starts with</li>", "type": "string", "enum": ["contains", "ends_with", "equal", "exists", "greater", "greater_or_equal", "in", "less", "less_or_equal", "not_contains", "not_equal", "not_exists", "not_in", "starts_with"]}, "type": {"description": "Type of the filter value. Possible values:<br><li>`Boolean`<br> Boolean</li><br><li>`Datetime`<br> Datetime string in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br> List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br> Unknown is explicitly converted to string format</li>", "type": "string"}, "value": {"description": "Value to filter by", "type": "object", "oneOf": [{"title": "String", "description": "String", "type": "string"}, {"title": "Integer", "description": "Integer", "type": "integer"}, {"title": "Float", "description": "Float", "type": "number", "format": "float"}, {"title": "Boolean", "description": "Boolean", "type": "boolean"}, {"title": "Dictionary", "description": "Dictionary is used for some operator types, e.g. `in` and `not_in`", "type": "object"}, {"title": "List", "description": "List of strings or integers", "type": "object"}]}}, "example": {"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}}}}}, "ordering": {"description": "List of fields to order by. Fields are similar to filters but without the `filter:` prefix. To reverse the order, add a minus sign before the field name, e.g. `-tasks:created_at`.", "type": "array", "items": {"type": "string", "enum": ["tasks:agreement", "tasks:annotations_results", "tasks:annotators", "tasks:cancelled_annotations", "tasks:comments", "tasks:completed_at", "tasks:created_at", "tasks:file_upload", "tasks:ground_truth", "tasks:id", "tasks:inner_id", "tasks:predictions_model_versions", "tasks:predictions_results", "tasks:predictions_score", "tasks:reviewed", "tasks:reviewers", "tasks:reviews_accepted", "tasks:reviews_rejected", "tasks:total_annotations", "tasks:total_predictions", "tasks:unresolved_comment_count", "tasks:updated_at"]}}}}, "project": {"description": "Project ID", "type": "integer"}}}}, {"name": "id", "in": "path", "description": "View ID", "type": "string", "required": true}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"data": {"description": "Custom view data", "type": "object", "properties": {"filters": {"description": "Filters to apply on tasks. You can use [the helper class `Filters` from this page](https://labelstud.io/sdk/data_manager.html) to create Data Manager Filters.<br>Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`", "required": ["conjunction", "items"], "type": "object", "properties": {"conjunction": {"description": "Logical conjunction for the filters. This conjunction (either \"or\" or \"and\") will be applied to all items in the filters list. It is not possible to combine \"or\" and \"and\" within one list of filters. All filters will be either combined with \"or\" or with \"and\", but not a mix of both.", "type": "string", "enum": ["or", "and"]}, "items": {"description": "List of filter items", "type": "array", "items": {"required": ["filter", "operator", "type", "value"], "type": "object", "properties": {"filter": {"description": "Filter identifier, it should start with `filter:tasks:` prefix, e.g. `filter:tasks:agreement`. For `task.data` fields it may look like `filter:tasks:data.field_name`. If you need more info about columns, check the [Get data manager columns](#tag/Data-Manager/operation/api_dm_columns_list) API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br> (Number) Agreement for annotation results for a specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br> (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br> (List) Annotators that completed the task (Community). Can include assigned annotators (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br> (Number) Number of cancelled or skipped annotations for the task</li><br><li>`filter:tasks:comments`<br> (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br> (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br> (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br> (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br> (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br> (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br> (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br> (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br> (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br> (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br> (Boolean) Whether the tasks have been reviewed (Enterprise only)</li><br><li>`filter:tasks:reviewers`<br> (String) Reviewers that reviewed the task, or assigned reviewers (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br> (Number) Number of annotations accepted for a task in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br> (Number) Number of annotations rejected for a task in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br> (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br> (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br> (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br> (Datetime) Time the task was updated at (e.g. new annotation was created, review added, etc)</li>", "type": "string", "enum": ["filter:tasks:agreement", "filter:tasks:annotations_results", "filter:tasks:annotators", "filter:tasks:cancelled_annotations", "filter:tasks:comments", "filter:tasks:completed_at", "filter:tasks:created_at", "filter:tasks:file_upload", "filter:tasks:ground_truth", "filter:tasks:id", "filter:tasks:inner_id", "filter:tasks:predictions_model_versions", "filter:tasks:predictions_results", "filter:tasks:predictions_score", "filter:tasks:reviewed", "filter:tasks:reviewers", "filter:tasks:reviews_accepted", "filter:tasks:reviews_rejected", "filter:tasks:total_annotations", "filter:tasks:total_predictions", "filter:tasks:unresolved_comment_count", "filter:tasks:updated_at"]}, "operator": {"description": "Filter operator. Possible values:<br><li>`contains`<br> Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br> Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br> Greater than</li><br><li>`greater_or_equal`<br> Greater than or equal to</li><br><li>`in`<br> Is between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br> Less than or equal to</li><br><li>`not_contains`<br> Does not contain</li><br><li>`not_equal`<br> Not equal to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br> Is not between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`starts_with`<br> Starts with</li>", "type": "string", "enum": ["contains", "ends_with", "equal", "exists", "greater", "greater_or_equal", "in", "less", "less_or_equal", "not_contains", "not_equal", "not_exists", "not_in", "starts_with"]}, "type": {"description": "Type of the filter value. Possible values:<br><li>`Boolean`<br> Boolean</li><br><li>`Datetime`<br> Datetime string in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br> List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br> Unknown is explicitly converted to string format</li>", "type": "string"}, "value": {"description": "Value to filter by", "type": "object", "oneOf": [{"title": "String", "description": "String", "type": "string"}, {"title": "Integer", "description": "Integer", "type": "integer"}, {"title": "Float", "description": "Float", "type": "number", "format": "float"}, {"title": "Boolean", "description": "Boolean", "type": "boolean"}, {"title": "Dictionary", "description": "Dictionary is used for some operator types, e.g. `in` and `not_in`", "type": "object"}, {"title": "List", "description": "List of strings or integers", "type": "object"}]}}, "example": {"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}}}}}, "ordering": {"description": "List of fields to order by. Fields are similar to filters but without the `filter:` prefix. To reverse the order, add a minus sign before the field name, e.g. `-tasks:created_at`.", "type": "array", "items": {"type": "string", "enum": ["tasks:agreement", "tasks:annotations_results", "tasks:annotators", "tasks:cancelled_annotations", "tasks:comments", "tasks:completed_at", "tasks:created_at", "tasks:file_upload", "tasks:ground_truth", "tasks:id", "tasks:inner_id", "tasks:predictions_model_versions", "tasks:predictions_results", "tasks:predictions_score", "tasks:reviewed", "tasks:reviewers", "tasks:reviews_accepted", "tasks:reviews_rejected", "tasks:total_annotations", "tasks:total_predictions", "tasks:unresolved_comment_count", "tasks:updated_at"]}}}}, "project": {"description": "Project ID", "type": "integer"}}}}}, "tags": ["Data Manager"], "x-fern-audiences": ["internal"]}, "patch": {"operationId": "api_dm_views_partial_update", "summary": "Update view", "description": "Update view data with additional filters and other information for a specific project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"data": {"description": "Custom view data", "type": "object", "properties": {"filters": {"description": "Filters to apply on tasks. You can use [the helper class `Filters` from this page](https://labelstud.io/sdk/data_manager.html) to create Data Manager Filters.<br>Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`", "required": ["conjunction", "items"], "type": "object", "properties": {"conjunction": {"description": "Logical conjunction for the filters. This conjunction (either \"or\" or \"and\") will be applied to all items in the filters list. It is not possible to combine \"or\" and \"and\" within one list of filters. All filters will be either combined with \"or\" or with \"and\", but not a mix of both.", "type": "string", "enum": ["or", "and"]}, "items": {"description": "List of filter items", "type": "array", "items": {"required": ["filter", "operator", "type", "value"], "type": "object", "properties": {"filter": {"description": "Filter identifier, it should start with `filter:tasks:` prefix, e.g. `filter:tasks:agreement`. For `task.data` fields it may look like `filter:tasks:data.field_name`. If you need more info about columns, check the [Get data manager columns](#tag/Data-Manager/operation/api_dm_columns_list) API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br> (Number) Agreement for annotation results for a specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br> (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br> (List) Annotators that completed the task (Community). Can include assigned annotators (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br> (Number) Number of cancelled or skipped annotations for the task</li><br><li>`filter:tasks:comments`<br> (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br> (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br> (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br> (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br> (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br> (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br> (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br> (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br> (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br> (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br> (Boolean) Whether the tasks have been reviewed (Enterprise only)</li><br><li>`filter:tasks:reviewers`<br> (String) Reviewers that reviewed the task, or assigned reviewers (Enterprise only). Important note: the filter `type` should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br> (Number) Number of annotations accepted for a task in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br> (Number) Number of annotations rejected for a task in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br> (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br> (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br> (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br> (Datetime) Time the task was updated at (e.g. new annotation was created, review added, etc)</li>", "type": "string", "enum": ["filter:tasks:agreement", "filter:tasks:annotations_results", "filter:tasks:annotators", "filter:tasks:cancelled_annotations", "filter:tasks:comments", "filter:tasks:completed_at", "filter:tasks:created_at", "filter:tasks:file_upload", "filter:tasks:ground_truth", "filter:tasks:id", "filter:tasks:inner_id", "filter:tasks:predictions_model_versions", "filter:tasks:predictions_results", "filter:tasks:predictions_score", "filter:tasks:reviewed", "filter:tasks:reviewers", "filter:tasks:reviews_accepted", "filter:tasks:reviews_rejected", "filter:tasks:total_annotations", "filter:tasks:total_predictions", "filter:tasks:unresolved_comment_count", "filter:tasks:updated_at"]}, "operator": {"description": "Filter operator. Possible values:<br><li>`contains`<br> Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br> Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br> Greater than</li><br><li>`greater_or_equal`<br> Greater than or equal to</li><br><li>`in`<br> Is between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br> Less than or equal to</li><br><li>`not_contains`<br> Does not contain</li><br><li>`not_equal`<br> Not equal to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br> Is not between min and max values, so the filter `value` should be e.g. `{\"min\": 1, \"max\": 7}`</li><br><li>`starts_with`<br> Starts with</li>", "type": "string", "enum": ["contains", "ends_with", "equal", "exists", "greater", "greater_or_equal", "in", "less", "less_or_equal", "not_contains", "not_equal", "not_exists", "not_in", "starts_with"]}, "type": {"description": "Type of the filter value. Possible values:<br><li>`Boolean`<br> Boolean</li><br><li>`Datetime`<br> Datetime string in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br> List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br> Unknown is explicitly converted to string format</li>", "type": "string"}, "value": {"description": "Value to filter by", "type": "object", "oneOf": [{"title": "String", "description": "String", "type": "string"}, {"title": "Integer", "description": "Integer", "type": "integer"}, {"title": "Float", "description": "Float", "type": "number", "format": "float"}, {"title": "Boolean", "description": "Boolean", "type": "boolean"}, {"title": "Dictionary", "description": "Dictionary is used for some operator types, e.g. `in` and `not_in`", "type": "object"}, {"title": "List", "description": "List of strings or integers", "type": "object"}]}}, "example": {"filter": "filter:tasks:id", "operator": "greater", "type": "Number", "value": 123}}}}}, "ordering": {"description": "List of fields to order by. Fields are similar to filters but without the `filter:` prefix. To reverse the order, add a minus sign before the field name, e.g. `-tasks:created_at`.", "type": "array", "items": {"type": "string", "enum": ["tasks:agreement", "tasks:annotations_results", "tasks:annotators", "tasks:cancelled_annotations", "tasks:comments", "tasks:completed_at", "tasks:created_at", "tasks:file_upload", "tasks:ground_truth", "tasks:id", "tasks:inner_id", "tasks:predictions_model_versions", "tasks:predictions_results", "tasks:predictions_score", "tasks:reviewed", "tasks:reviewers", "tasks:reviews_accepted", "tasks:reviews_rejected", "tasks:total_annotations", "tasks:total_predictions", "tasks:unresolved_comment_count", "tasks:updated_at"]}}}}, "project": {"description": "Project ID", "type": "integer"}}}}, {"name": "id", "in": "path", "description": "View ID", "type": "string", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/View"}}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_dm_views_delete", "summary": "Delete view", "description": "Delete a specific view by ID.", "parameters": [{"name": "id", "in": "path", "description": "View ID", "type": "string", "required": true}], "responses": {"204": {"description": ""}}, "tags": ["Data Manager"], "x-fern-sdk-group-name": "views", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/import/file-upload/{id}": {"get": {"operationId": "api_import_file-upload_read", "summary": "Get file upload", "description": "Retrieve details about a specific uploaded file.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FileUpload"}}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_import_file-upload_partial_update", "summary": "Update file upload", "description": "Update a specific uploaded file.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FileUpload"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FileUpload"}}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_import_file-upload_delete", "summary": "Delete file upload", "description": "Delete a specific uploaded file.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this file upload.", "required": true, "type": "integer"}]}, "/api/invite": {"get": {"operationId": "api_invite_read", "summary": "Get organization invite link", "description": "Get a link to use to invite a new member to an organization in Label Studio Enterprise.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganizationInvite"}}}, "tags": ["Invites"], "x-fern-sdk-group-name": "organizations", "x-fern-sdk-method-name": "get_invite"}, "parameters": []}, "/api/invite/reset-token": {"post": {"operationId": "api_invite_reset-token_create", "summary": "Reset organization token", "description": "Reset the token used in the invitation link to invite someone to an organization.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganizationInvite"}}}, "tags": ["Invites"], "x-fern-sdk-group-name": "organizations", "x-fern-sdk-method-name": "reset_token"}, "parameters": []}, "/api/label_links/": {"get": {"operationId": "api_label_links_list", "summary": "List label links", "description": "List label links for a specific label and project.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/LabelLink"}}}}}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["internal"]}, "post": {"operationId": "api_label_links_create", "summary": "Create label links", "description": "Create label links to link new custom labels to your project labeling configuration.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabelLink"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/LabelLink"}}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/label_links/{id}/": {"get": {"operationId": "api_label_links_read", "summary": "Get label link", "description": "Get label links for a specific project configuration. ", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabelLink"}}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["internal"]}, "patch": {"operationId": "api_label_links_partial_update", "summary": "Update label link", "description": "\nUpdate a label link that links custom labels to a project labeling configuration, for example if the fromName,  \ntoName, or name parameters for a tag in the labeling configuration change. \n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabelLink"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabelLink"}}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["internal"]}, "delete": {"operationId": "api_label_links_delete", "summary": "Remove label link", "description": "\nRemove a label link that links custom labels to your project labeling configuration. If you remove a label link,\nthe label stops being available for the project it was linked to. You can add a new label link at any time. \n", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["internal"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/labels/": {"get": {"operationId": "api_labels_list", "summary": "List labels", "description": "List all custom labels added to your project separately from the labeling configuration.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Label"}}}}}}, "tags": ["Labels"], "x-fern-sdk-group-name": "labels", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["internal"]}, "post": {"operationId": "api_labels_create", "summary": "Create labels", "description": "Add labels to your project without updating the labeling configuration.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/LabelCreate"}}}], "responses": {"201": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/LabelCreate"}}}}, "tags": ["Labels"], "x-fern-sdk-group-name": "labels", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/labels/bulk": {"post": {"operationId": "api_labels_bulk_create", "summary": "Bulk update labels", "description": "\nIf you want to update the labels in saved annotations, use this endpoint.\n", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["Labels"], "x-fern-sdk-group-name": ["projects", "labels"], "x-fern-sdk-method-name": "update_many", "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/labels/{id}/": {"get": {"operationId": "api_labels_read", "summary": "Get label", "description": "\nRetrieve a specific custom label used for your project by its ID.\n", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Label"}}}, "tags": ["Labels"], "x-fern-sdk-group-name": "labels", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["internal"]}, "patch": {"operationId": "api_labels_partial_update", "summary": "Update labels", "description": "Update labels used for your project without updating the labeling configuration.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Label"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Label"}}}, "tags": ["Labels"], "x-fern-sdk-group-name": "labels", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["internal"]}, "delete": {"operationId": "api_labels_delete", "summary": "Remove labels", "description": "Remove labels from your project without updating the labeling configuration.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Labels"], "x-fern-sdk-group-name": "labels", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["internal"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/ml/": {"get": {"operationId": "api_ml_list", "summary": "List ML backends", "description": "\nList all configured ML backends for a specific project by ID.\nUse the following cURL command:\n```bash\ncurl https://localhost:8080/api/ml?project={project_id} -H 'Authorization: Token abc123'\n", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/MLBackend"}}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_ml_create", "summary": "Add ML Backend", "description": "\nAdd an ML backend to a project using the Label Studio UI or by sending a POST request using the following cURL \ncommand:\n```bash\ncurl -X POST -H 'Content-type: application/json' https://localhost:8080/api/ml -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9090\", \"project\": {project_id}}' \n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"url": {"description": "ML backend URL", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "is_interactive": {"description": "Is interactive", "type": "boolean"}, "title": {"description": "Title", "type": "string"}, "description": {"description": "Description", "type": "string"}, "auth_method": {"description": "Auth method", "type": "string", "enum": ["NONE", "BASIC_AUTH"]}, "basic_auth_user": {"description": "Basic auth user", "type": "string"}, "basic_auth_pass": {"description": "Basic auth password", "type": "string"}, "extra_params": {"description": "Extra parameters", "type": "object"}, "timeout": {"description": "Response model timeout", "type": "integer"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"url": {"description": "ML backend URL", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "is_interactive": {"description": "Is interactive", "type": "boolean"}, "title": {"description": "Title", "type": "string"}, "description": {"description": "Description", "type": "string"}, "auth_method": {"description": "Auth method", "type": "string", "enum": ["NONE", "BASIC_AUTH"]}, "basic_auth_user": {"description": "Basic auth user", "type": "string"}, "basic_auth_pass": {"description": "Basic auth password", "type": "string"}, "extra_params": {"description": "Extra parameters", "type": "object"}, "timeout": {"description": "Response model timeout", "type": "integer"}}}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/ml/{id}": {"get": {"operationId": "api_ml_read", "summary": "Get ML Backend", "description": "\nGet details about a specific ML backend connection by ID. For example, make a GET request using the\nfollowing cURL command:\n```bash\ncurl https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'\n", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MLBackend"}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_ml_partial_update", "summary": "Update ML Backend", "description": "\nUpdate ML backend parameters using the Label Studio UI or by sending a PATCH request using the following cURL command:\n```bash\ncurl -X PATCH -H 'Content-type: application/json' https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9091\"}' \n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"url": {"description": "ML backend URL", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "is_interactive": {"description": "Is interactive", "type": "boolean"}, "title": {"description": "Title", "type": "string"}, "description": {"description": "Description", "type": "string"}, "auth_method": {"description": "Auth method", "type": "string", "enum": ["NONE", "BASIC_AUTH"]}, "basic_auth_user": {"description": "Basic auth user", "type": "string"}, "basic_auth_pass": {"description": "Basic auth password", "type": "string"}, "extra_params": {"description": "Extra parameters", "type": "object"}, "timeout": {"description": "Response model timeout", "type": "integer"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"url": {"description": "ML backend URL", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "is_interactive": {"description": "Is interactive", "type": "boolean"}, "title": {"description": "Title", "type": "string"}, "description": {"description": "Description", "type": "string"}, "auth_method": {"description": "Auth method", "type": "string", "enum": ["NONE", "BASIC_AUTH"]}, "basic_auth_user": {"description": "Basic auth user", "type": "string"}, "basic_auth_pass": {"description": "Basic auth password", "type": "string"}, "extra_params": {"description": "Extra parameters", "type": "object"}, "timeout": {"description": "Response model timeout", "type": "integer"}}}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_ml_delete", "summary": "Remove ML Backend", "description": "\nRemove an existing ML backend connection by ID. For example, use the\nfollowing cURL command:\n```bash\ncurl -X DELETE https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'\n", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ml backend.", "required": true, "type": "integer"}]}, "/api/ml/{id}/interactive-annotating": {"post": {"operationId": "api_ml_interactive-annotating_create", "summary": "Request Interactive Annotation", "description": "\nSend a request to the machine learning backend set up to be used for interactive preannotations to retrieve a\npredicted region based on annotator input. \nSee [set up machine learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations) for more.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MLInteractiveAnnotatingRequest"}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ML backend.", "type": "integer", "required": true}], "responses": {"200": {"description": "Interactive annotation has succeeded."}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "predict_interactive", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/ml/{id}/predict/test": {"post": {"operationId": "api_ml_predict_test_create", "summary": "Test prediction", "description": "\nAfter you add an ML backend, call this API with the ML backend ID to run a test prediction on specific task data               \n", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ML backend.", "type": "integer", "required": true}], "responses": {"200": {"description": "Predicting has successfully started."}, "500": {"description": "Predicting error", "schema": {"description": "Error message", "type": "string", "example": "Server responded with an error."}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "test_predict", "x-fern-audiences": ["internal"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/ml/{id}/train": {"post": {"operationId": "api_ml_train_create", "summary": "Train", "description": "\nAfter you add an ML backend, call this API with the ML backend ID to start training with \nalready-labeled tasks. \n\nGet the ML backend ID by [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"use_ground_truth": {"description": "Whether to include ground truth annotations in training", "type": "boolean"}}}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ML backend.", "type": "integer", "required": true}], "responses": {"200": {"description": "Training has successfully started."}, "500": {"description": "Training error", "schema": {"description": "Error message", "type": "string", "example": "Server responded with an error."}}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "train", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/ml/{id}/versions": {"get": {"operationId": "api_ml_versions_read", "summary": "Get model versions", "description": "Get available versions of the model.", "parameters": [], "responses": {"200": {"description": "List of available versions."}}, "tags": ["Machine Learning"], "x-fern-sdk-group-name": "ml", "x-fern-sdk-method-name": "list_model_versions", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/organizations/": {"get": {"operationId": "api_organizations_list", "summary": "List your organizations", "description": "\nReturn a list of the organizations you've created or that you have access to.\n", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/OrganizationId"}}}}, "tags": ["Organizations"], "x-fern-sdk-group-name": "organizations", "x-fern-sdk-method-name": "list"}, "parameters": []}, "/api/organizations/{id}": {"get": {"operationId": "api_organizations_read", "summary": "Get organization settings", "description": "Retrieve the settings for a specific organization by ID.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Organization"}}}, "tags": ["Organizations"], "x-fern-sdk-group-name": "organizations", "x-fern-sdk-method-name": "get"}, "patch": {"operationId": "api_organizations_partial_update", "summary": "Update organization settings", "description": "Update the settings for a specific organization by ID.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Organization"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Organization"}}}, "tags": ["Organizations"], "x-fern-sdk-group-name": "organizations", "x-fern-sdk-method-name": "update"}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this organization.", "required": true, "type": "integer"}]}, "/api/organizations/{id}/memberships": {"get": {"operationId": "api_organizations_memberships_list", "summary": "Get organization members list", "description": "Retrieve a list of the organization members and their IDs.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/OrganizationMemberUser"}}}}}}, "tags": ["Organizations"], "x-fern-sdk-group-name": ["organizations", "members"], "x-fern-sdk-method-name": "list", "x-fern-pagination": {"offset": "$request.page", "results": "$response.results"}}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/organizations/{id}/memberships/{user_pk}/": {"delete": {"operationId": "api_organizations_memberships_delete", "summary": "Soft delete an organization member", "description": "Soft delete a member from the organization.", "parameters": [{"name": "user_pk", "in": "path", "description": "A unique integer value identifying the user to be deleted from the organization.", "type": "integer", "required": true}], "responses": {"204": {"description": "Member deleted successfully."}, "405": {"description": "User cannot soft delete self."}, "404": {"description": "Member not found"}}, "tags": ["Organizations"], "x-fern-sdk-group-name": ["organizations", "members"], "x-fern-sdk-method-name": "delete"}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "user_pk", "in": "path", "required": true, "type": "string"}]}, "/api/predictions/": {"get": {"operationId": "api_predictions_list", "summary": "List predictions", "description": "List all predictions and their IDs.", "parameters": [{"name": "task", "in": "query", "description": "Filter predictions by task ID", "type": "integer"}, {"name": "project", "in": "query", "description": "Filter predictions by project ID", "type": "integer"}], "responses": {"200": {"description": "Predictions list", "schema": {"type": "array", "items": {"$ref": "#/definitions/Prediction"}}, "examples": {"application/json": [{"id": 1, "task": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}]}}}, "tags": ["Predictions"], "x-fern-sdk-group-name": "predictions", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_predictions_create", "summary": "Create prediction", "description": "Create a prediction for a specific task.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"task": {"description": "Task ID for which the prediction is created", "type": "integer"}, "result": {"description": "Prediction result in JSON format. Read more about the format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)", "type": "array", "items": {"type": "object"}, "example": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}]}, "score": {"description": "Prediction score. Can be used in Data Manager to sort task by model confidence. Task with the lowest score will be shown first.", "type": "number", "example": 0.95}, "model_version": {"description": "Model version - tag for predictions that can be used to filter tasks in Data Manager, as well as select specific model version for showing preannotations in the labeling interface", "type": "string", "example": "yolo-v8"}}, "example": {"result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}], "responses": {"201": {"description": "Created prediction", "schema": {"$ref": "#/definitions/Prediction"}, "examples": {"application/json": {"id": 1, "task": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}}, "tags": ["Predictions"], "x-fern-sdk-group-name": "predictions", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/predictions/{id}/": {"get": {"operationId": "api_predictions_read", "summary": "Get prediction details", "description": "Get details about a specific prediction by its ID.", "parameters": [{"name": "id", "in": "path", "description": "Prediction ID", "type": "integer", "required": true}], "responses": {"200": {"description": "Prediction details", "schema": {"$ref": "#/definitions/Prediction"}, "examples": {"application/json": {"id": 1, "task": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}}, "tags": ["Predictions"], "x-fern-sdk-group-name": "predictions", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "put": {"operationId": "api_predictions_update", "summary": "Put prediction", "description": "Overwrite prediction data by prediction ID.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"task": {"description": "Task ID for which the prediction is created", "type": "integer"}, "result": {"description": "Prediction result in JSON format. Read more about the format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)", "type": "array", "items": {"type": "object"}, "example": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}]}, "score": {"description": "Prediction score. Can be used in Data Manager to sort task by model confidence. Task with the lowest score will be shown first.", "type": "number", "example": 0.95}, "model_version": {"description": "Model version - tag for predictions that can be used to filter tasks in Data Manager, as well as select specific model version for showing preannotations in the labeling interface", "type": "string", "example": "yolo-v8"}}, "example": {"result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}, {"name": "id", "in": "path", "description": "Prediction ID", "type": "integer", "required": true}], "responses": {"200": {"description": "Updated prediction", "schema": {"$ref": "#/definitions/Prediction"}, "examples": {"application/json": {"id": 1, "task": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}}, "tags": ["Predictions"], "x-fern-audiences": ["internal"]}, "patch": {"operationId": "api_predictions_partial_update", "summary": "Update prediction", "description": "Update prediction data by prediction ID.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"task": {"description": "Task ID for which the prediction is created", "type": "integer"}, "result": {"description": "Prediction result in JSON format. Read more about the format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)", "type": "array", "items": {"type": "object"}, "example": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}]}, "score": {"description": "Prediction score. Can be used in Data Manager to sort task by model confidence. Task with the lowest score will be shown first.", "type": "number", "example": 0.95}, "model_version": {"description": "Model version - tag for predictions that can be used to filter tasks in Data Manager, as well as select specific model version for showing preannotations in the labeling interface", "type": "string", "example": "yolo-v8"}}, "example": {"result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}, {"name": "id", "in": "path", "description": "Prediction ID", "type": "integer", "required": true}], "responses": {"200": {"description": "Updated prediction", "schema": {"$ref": "#/definitions/Prediction"}, "examples": {"application/json": {"id": 1, "task": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "score": 0.95, "model_version": "yolo-v8"}}}}, "tags": ["Predictions"], "x-fern-sdk-group-name": "predictions", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_predictions_delete", "summary": "Delete prediction", "description": "Delete a prediction by prediction ID.", "parameters": [{"name": "id", "in": "path", "description": "Prediction ID", "type": "integer", "required": true}], "responses": {"204": {"description": ""}}, "tags": ["Predictions"], "x-fern-sdk-group-name": "predictions", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/projects/": {"get": {"operationId": "api_projects_list", "summary": "List your projects", "description": "\nReturn a list of the projects that you've created.\n\nTo perform most tasks with the Label Studio API, you must specify the project ID, sometimes referred to as the `pk`.\nTo retrieve a list of your Label Studio projects, update the following command to match your own environment.\nReplace the domain name, port, and authorization token, then run the following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/ -H 'Authorization: Token abc123'\n```\n", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "ids", "in": "query", "description": "ids", "required": false, "type": "string"}, {"name": "title", "in": "query", "description": "title", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"], "x-fern-pagination": {"offset": "$request.page", "results": "$response.results"}}, "post": {"operationId": "api_projects_create", "summary": "Create new project", "description": "\nCreate a project and set up the labeling interface in Label Studio using the API.\n\n```bash\ncurl -H Content-Type:application/json -H 'Authorization: Token abc123' -X POST 'https://localhost:8080/api/projects'     --data '{\"title\": \"My project\", \"label_config\": \"<View></View>\"}'\n```\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "Project", "description": "Project", "type": "object", "properties": {"title": {"title": "title", "description": "Project title", "type": "string", "example": "My project"}, "description": {"title": "description", "description": "Project description", "type": "string", "example": "My first project"}, "label_config": {"title": "label_config", "description": "Label config in XML format", "type": "string", "example": "<View>[...]</View>"}, "expert_instruction": {"title": "expert_instruction", "description": "Labeling instructions to show to the user", "type": "string", "example": "Label all cats"}, "show_instruction": {"title": "show_instruction", "description": "Show labeling instructions", "type": "boolean"}, "show_skip_button": {"title": "show_skip_button", "description": "Show skip button", "type": "boolean"}, "enable_empty_annotation": {"title": "enable_empty_annotation", "description": "Allow empty annotations", "type": "boolean"}, "show_annotation_history": {"title": "show_annotation_history", "description": "Show annotation history", "type": "boolean"}, "reveal_preannotations_interactively": {"title": "reveal_preannotations_interactively", "description": "Reveal preannotations interactively. If set to True, predictions will be shown to the user only after selecting the area of interest", "type": "boolean"}, "show_collab_predictions": {"title": "show_collab_predictions", "description": "Show predictions to annotators", "type": "boolean"}, "maximum_annotations": {"title": "maximum_annotations", "description": "Maximum annotations per task", "type": "integer"}, "color": {"title": "color", "description": "Project color in HEX format", "type": "string", "default": "#FFFFFF"}, "control_weights": {"title": "control_weights", "description": "Dict of weights for each control tag in metric calculation. Each control tag (e.g. label or choice) will have its own key in control weight dict with weight for each label and overall weight. For example, if a bounding box annotation with a control tag named my_bbox should be included with 0.33 weight in agreement calculation, and the first label Car should be twice as important as Airplane, then you need to specify: {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplane': 0.5}, 'overall': 0.33}", "type": "object", "example": {"my_bbox": {"type": "RectangleLabels", "labels": {"Car": 1.0, "Airplaine": 0.5}, "overall": 0.33}}}}}}], "responses": {"201": {"description": "", "schema": {"title": "Project", "description": "Project", "type": "object", "properties": {"title": {"title": "title", "description": "Project title", "type": "string", "example": "My project"}, "description": {"title": "description", "description": "Project description", "type": "string", "example": "My first project"}, "label_config": {"title": "label_config", "description": "Label config in XML format", "type": "string", "example": "<View>[...]</View>"}, "expert_instruction": {"title": "expert_instruction", "description": "Labeling instructions to show to the user", "type": "string", "example": "Label all cats"}, "show_instruction": {"title": "show_instruction", "description": "Show labeling instructions", "type": "boolean"}, "show_skip_button": {"title": "show_skip_button", "description": "Show skip button", "type": "boolean"}, "enable_empty_annotation": {"title": "enable_empty_annotation", "description": "Allow empty annotations", "type": "boolean"}, "show_annotation_history": {"title": "show_annotation_history", "description": "Show annotation history", "type": "boolean"}, "reveal_preannotations_interactively": {"title": "reveal_preannotations_interactively", "description": "Reveal preannotations interactively. If set to True, predictions will be shown to the user only after selecting the area of interest", "type": "boolean"}, "show_collab_predictions": {"title": "show_collab_predictions", "description": "Show predictions to annotators", "type": "boolean"}, "maximum_annotations": {"title": "maximum_annotations", "description": "Maximum annotations per task", "type": "integer"}, "color": {"title": "color", "description": "Project color in HEX format", "type": "string", "default": "#FFFFFF"}, "control_weights": {"title": "control_weights", "description": "Dict of weights for each control tag in metric calculation. Each control tag (e.g. label or choice) will have its own key in control weight dict with weight for each label and overall weight. For example, if a bounding box annotation with a control tag named my_bbox should be included with 0.33 weight in agreement calculation, and the first label Car should be twice as important as Airplane, then you need to specify: {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplane': 0.5}, 'overall': 0.33}", "type": "object", "example": {"my_bbox": {"type": "RectangleLabels", "labels": {"Car": 1.0, "Airplaine": 0.5}, "overall": 0.33}}}}}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/projects/validate/": {"post": {"operationId": "api_projects_validate_create", "summary": "Validate label config", "description": "Validate an arbitrary labeling configuration.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectLabelConfig"}}], "responses": {"204": {"description": "Validation success"}}, "tags": ["Projects"], "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/projects/{id}/": {"get": {"operationId": "api_projects_read", "summary": "Get project by ID", "description": "Retrieve information about a project by project ID.", "parameters": [], "responses": {"200": {"description": "Project information", "schema": {"$ref": "#/definitions/Project"}, "examples": {"application/json": {"id": 1, "title": "My project", "description": "My first project", "label_config": "<View>[...]</View>", "expert_instruction": "Label all cats", "show_instruction": true, "show_skip_button": true, "enable_empty_annotation": true, "show_annotation_history": true, "organization": 1, "color": "#FF0000", "maximum_annotations": 1, "is_published": true, "model_version": "1.0.0", "is_draft": false, "created_by": {"id": 1, "first_name": "Jo", "last_name": "Doe", "email": "manager@humansignal.com"}, "created_at": "2023-08-24T14:15:22Z", "min_annotations_to_start_training": 0, "start_training_on_annotation_update": true, "show_collab_predictions": true, "num_tasks_with_annotations": 10, "task_number": 100, "useful_annotation_number": 10, "ground_truth_number": 5, "skipped_annotations_number": 0, "total_annotations_number": 10, "total_predictions_number": 0, "sampling": "Sequential sampling", "show_ground_truth_first": true, "show_overlap_first": true, "overlap_cohort_percentage": 100, "task_data_login": "user", "task_data_password": "secret", "control_weights": {}, "parsed_label_config": "{\"tag\": {...}}", "evaluate_predictions_automatically": false, "config_has_control_tags": true, "skip_queue": "REQUEUE_FOR_ME", "reveal_preannotations_interactively": true, "pinned_at": "2023-08-24T14:15:22Z", "finished_task_number": 10, "queue_total": 10, "queue_done": 100}}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_projects_partial_update", "summary": "Update project", "description": "Update the project settings for a specific project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "Project", "description": "Project", "type": "object", "properties": {"title": {"title": "title", "description": "Project title", "type": "string", "example": "My project"}, "description": {"title": "description", "description": "Project description", "type": "string", "example": "My first project"}, "label_config": {"title": "label_config", "description": "Label config in XML format", "type": "string", "example": "<View>[...]</View>"}, "expert_instruction": {"title": "expert_instruction", "description": "Labeling instructions to show to the user", "type": "string", "example": "Label all cats"}, "show_instruction": {"title": "show_instruction", "description": "Show labeling instructions", "type": "boolean"}, "show_skip_button": {"title": "show_skip_button", "description": "Show skip button", "type": "boolean"}, "enable_empty_annotation": {"title": "enable_empty_annotation", "description": "Allow empty annotations", "type": "boolean"}, "show_annotation_history": {"title": "show_annotation_history", "description": "Show annotation history", "type": "boolean"}, "reveal_preannotations_interactively": {"title": "reveal_preannotations_interactively", "description": "Reveal preannotations interactively. If set to True, predictions will be shown to the user only after selecting the area of interest", "type": "boolean"}, "show_collab_predictions": {"title": "show_collab_predictions", "description": "Show predictions to annotators", "type": "boolean"}, "maximum_annotations": {"title": "maximum_annotations", "description": "Maximum annotations per task", "type": "integer"}, "color": {"title": "color", "description": "Project color in HEX format", "type": "string", "default": "#FFFFFF"}, "control_weights": {"title": "control_weights", "description": "Dict of weights for each control tag in metric calculation. Each control tag (e.g. label or choice) will have its own key in control weight dict with weight for each label and overall weight. For example, if a bounding box annotation with a control tag named my_bbox should be included with 0.33 weight in agreement calculation, and the first label Car should be twice as important as Airplane, then you need to specify: {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplane': 0.5}, 'overall': 0.33}", "type": "object", "example": {"my_bbox": {"type": "RectangleLabels", "labels": {"Car": 1.0, "Airplaine": 0.5}, "overall": 0.33}}}}}}], "responses": {"200": {"description": "", "schema": {"title": "Project", "description": "Project", "type": "object", "properties": {"title": {"title": "title", "description": "Project title", "type": "string", "example": "My project"}, "description": {"title": "description", "description": "Project description", "type": "string", "example": "My first project"}, "label_config": {"title": "label_config", "description": "Label config in XML format", "type": "string", "example": "<View>[...]</View>"}, "expert_instruction": {"title": "expert_instruction", "description": "Labeling instructions to show to the user", "type": "string", "example": "Label all cats"}, "show_instruction": {"title": "show_instruction", "description": "Show labeling instructions", "type": "boolean"}, "show_skip_button": {"title": "show_skip_button", "description": "Show skip button", "type": "boolean"}, "enable_empty_annotation": {"title": "enable_empty_annotation", "description": "Allow empty annotations", "type": "boolean"}, "show_annotation_history": {"title": "show_annotation_history", "description": "Show annotation history", "type": "boolean"}, "reveal_preannotations_interactively": {"title": "reveal_preannotations_interactively", "description": "Reveal preannotations interactively. If set to True, predictions will be shown to the user only after selecting the area of interest", "type": "boolean"}, "show_collab_predictions": {"title": "show_collab_predictions", "description": "Show predictions to annotators", "type": "boolean"}, "maximum_annotations": {"title": "maximum_annotations", "description": "Maximum annotations per task", "type": "integer"}, "color": {"title": "color", "description": "Project color in HEX format", "type": "string", "default": "#FFFFFF"}, "control_weights": {"title": "control_weights", "description": "Dict of weights for each control tag in metric calculation. Each control tag (e.g. label or choice) will have its own key in control weight dict with weight for each label and overall weight. For example, if a bounding box annotation with a control tag named my_bbox should be included with 0.33 weight in agreement calculation, and the first label Car should be twice as important as Airplane, then you need to specify: {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplane': 0.5}, 'overall': 0.33}", "type": "object", "example": {"my_bbox": {"type": "RectangleLabels", "labels": {"Car": 1.0, "Airplaine": 0.5}, "overall": 0.33}}}}}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_projects_delete", "summary": "Delete project", "description": "Delete a project by specified project ID.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/api/projects/{id}/export": {"get": {"operationId": "api_projects_export_read", "summary": "Easy export of tasks and annotations", "description": "\n<i>Note: if you have a large project it's recommended to use\nexport snapshots, this easy export endpoint might have timeouts.</i><br/><br>\nExport annotated tasks as a file in a specific format.\nFor example, to export JSON annotations for a project to a file called `annotations.json`,\nrun the following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON -H 'Authorization: Token abc123' --output 'annotations.json'\n```\nTo export all tasks, including skipped tasks and others without annotations, run the following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON&download_all_tasks=true -H 'Authorization: Token abc123' --output 'annotations.json'\n```\nTo export specific tasks with IDs of 123 and 345, run the following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?ids[]=123\\&ids[]=345 -H 'Authorization: Token abc123' --output 'annotations.json'\n```\n", "parameters": [{"name": "export_type", "in": "query", "description": "Selected export format (JSON by default)", "type": "string"}, {"name": "download_all_tasks", "in": "query", "description": "\nIf true, download all tasks regardless of status. If false, download only annotated tasks.\n", "type": "string"}, {"name": "download_resources", "in": "query", "description": "\nIf true, download all resource files such as images, audio, and others relevant to the tasks.\n", "type": "boolean"}, {"name": "ids", "in": "query", "description": "\nSpecify a list of task IDs to retrieve only the details for those tasks.\n", "type": "array", "items": {"title": "Task ID", "description": "Individual task ID", "type": "integer"}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"200": {"description": "Exported data", "schema": {"title": "Export file", "description": "Export file with results", "type": "file"}}}, "tags": ["Export"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "create_export", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/export/formats": {"get": {"operationId": "api_projects_export_formats_read", "summary": "Get export formats", "description": "Retrieve the available export formats for the current project by ID.", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"200": {"description": "Export formats", "schema": {"title": "Format list", "description": "List of available formats", "type": "array", "items": {"title": "Export format", "type": "string"}}}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "list_formats", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/exports/": {"get": {"operationId": "api_projects_exports_list", "summary": "List all export snapshots", "description": "\nReturns a list of exported files for a specific project by ID.\n", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Export"}}}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_projects_exports_create", "summary": "Create new export snapshot", "description": "\nCreate a new export request to start a background task and generate an export file for a specific project by ID.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ExportCreate"}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ExportCreate"}}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this export.", "required": true, "type": "integer"}]}, "/api/projects/{id}/exports/{export_pk}": {"get": {"operationId": "api_projects_exports_read", "summary": "Get export snapshot by ID", "description": "\nRetrieve information about an export file by export ID for a specific project.\n", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "export_pk", "in": "path", "description": "Primary key identifying the export file.", "type": "string", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Export"}}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_projects_exports_delete", "summary": "Delete export snapshot", "description": "\nDelete an export file by specified export ID.\n", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "export_pk", "in": "path", "description": "Primary key identifying the export file.", "type": "string", "required": true}], "responses": {"204": {"description": ""}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this export.", "required": true, "type": "integer"}, {"name": "export_pk", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/exports/{export_pk}/convert": {"post": {"operationId": "api_projects_exports_convert_create", "summary": "Export conversion", "description": "\nConvert export snapshot to selected format\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ExportConvert"}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "export_pk", "in": "path", "description": "Primary key identifying the export file.", "type": "string", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ExportConvert"}}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "convert", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this export.", "required": true, "type": "integer"}, {"name": "export_pk", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/exports/{export_pk}/download": {"get": {"operationId": "api_projects_exports_download_read", "summary": "Download export snapshot as file in specified format", "description": "\nDownload an export file in the specified format for a specific project. Specify the project ID with the `id`\nparameter in the path and the ID of the export file you want to download using the `export_pk` parameter\nin the path.\n\nGet the `export_pk` from the response of the request to [Create new export](/api#operation/api_projects_exports_create)\nor after [listing export files](/api#operation/api_projects_exports_list).\n", "parameters": [{"name": "exportType", "in": "query", "description": "Selected export format", "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "export_pk", "in": "path", "description": "Primary key identifying the export file.", "type": "string", "required": true}], "responses": {"200": {"description": ""}}, "tags": ["Export"], "x-fern-sdk-group-name": ["projects", "exports"], "x-fern-sdk-method-name": "download", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this export.", "required": true, "type": "integer"}, {"name": "export_pk", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/file-uploads": {"get": {"operationId": "api_projects_file-uploads_list", "summary": "Get files list", "description": "\nRetrieve the list of uploaded files used to create labeling tasks for a specific project.\n", "parameters": [{"name": "all", "in": "query", "description": "Set to \"true\" if you want to retrieve all file uploads", "type": "boolean"}, {"name": "ids", "in": "query", "description": "Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]", "type": "array", "items": {"title": "File upload ID", "type": "integer"}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FileUpload"}}}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_projects_file-uploads_delete", "summary": "Delete files", "description": "\nDelete uploaded files for a specific project.\n", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "delete_many", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this file upload.", "required": true, "type": "integer"}]}, "/api/projects/{id}/import": {"post": {"operationId": "api_projects_import_create", "summary": "Import tasks", "description": "\nImport data as labeling tasks in bulk using this API endpoint. You can use this API endpoint to import multiple tasks.\nOne POST request is limited at 250K tasks and 200 MB.\n\n**Note:** Imported data is verified against a project *label_config* and must\ninclude all variables that were used in the *label_config*. For example,\nif the label configuration has a *$text* variable, then each item in a data object\nmust include a \"text\" field.\n<br>\n\n## POST requests\n<hr style=\"opacity:0.3\">\n\nThere are three possible ways to import tasks with this endpoint:\n\n### 1\\. **POST with data**\nSend JSON tasks as POST data. Only JSON is supported for POSTing files directly.\nUpdate this example to specify your authorization token and Label Studio instance host, then run the following from\nthe command line.\n\n```bash\ncurl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import' --data '[{\"text\": \"Some text 1\"}, {\"text\": \"Some text 2\"}]'\n```\n\n### 2\\. **POST with files**\nSend tasks as files. You can attach multiple files with different names.\n\n- **JSON**: text files in JavaScript object notation format\n- **CSV**: text files with tables in Comma Separated Values format\n- **TSV**: text files with tables in Tab Separated Value format\n- **TXT**: simple text files are similar to CSV with one column and no header, supported for projects with one source only\n\nUpdate this example to specify your authorization token, Label Studio instance host, and file name and path,\nthen run the following from the command line:\n\n```bash\ncurl -H 'Authorization: Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import' -F ‘file=@path/to/my_file.csv’\n```\n\n### 3\\. **POST with URL**\nYou can also provide a URL to a file with labeling tasks. Supported file formats are the same as in option 2.\n\n```bash\ncurl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import' \\\n--data '[{\"url\": \"http://example.com/test1.csv\"}, {\"url\": \"http://example.com/test2.csv\"}]'\n```\n\n<br>\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "tasks", "description": "List of tasks to import", "type": "array", "items": {"type": "object"}}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "commit_to_project", "in": "query", "description": "Set to \"true\" to immediately commit tasks to the project.", "required": false, "type": "boolean", "default": true}, {"name": "return_task_ids", "in": "query", "description": "Set to \"true\" to return task IDs in the response.", "required": false, "type": "boolean", "default": false}, {"name": "preannotated_from_fields", "in": "query", "description": "List of fields to preannotate from the task data. For example, if you provide a list of `{\"text\": \"text\", \"prediction\": \"label\"}` items in the request, the system will create a task with the `text` field and a prediction with the `label` field when `preannoted_from_fields=[\"prediction\"]`.", "required": false, "type": "array", "items": {"type": "string"}}], "responses": {"201": {"description": "Tasks successfully imported", "schema": {"title": "Task creation response", "description": "Task creation response", "type": "object", "properties": {"task_count": {"title": "task_count", "description": "Number of tasks added", "type": "integer"}, "annotation_count": {"title": "annotation_count", "description": "Number of annotations added", "type": "integer"}, "predictions_count": {"title": "predictions_count", "description": "Number of predictions added", "type": "integer"}, "duration": {"title": "duration", "description": "Time in seconds to create", "type": "number"}, "file_upload_ids": {"title": "file_upload_ids", "description": "Database IDs of uploaded files", "type": "array", "items": {"title": "File Upload IDs", "type": "integer"}}, "could_be_tasks_list": {"title": "could_be_tasks_list", "description": "Whether uploaded files can contain lists of tasks, like CSV/TSV files", "type": "boolean"}, "found_formats": {"title": "found_formats", "description": "The list of found file formats", "type": "array", "items": {"title": "File format", "type": "string"}}, "data_columns": {"title": "data_columns", "description": "The list of found data columns", "type": "array", "items": {"title": "Data column name", "type": "string"}}}}}, "400": {"description": "", "schema": {"title": "Incorrect task data", "description": "String with error description", "type": "string"}}}, "tags": ["Import"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "import_tasks", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/api/projects/{id}/imports/{import_pk}/": {"get": {"operationId": "api_projects_imports_read", "summary": "Get project import info", "description": "Return data related to async project import operation", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project import.", "type": "integer", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectImport"}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "create_many_status", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project import.", "required": true, "type": "integer"}, {"name": "import_pk", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/reimports/{reimport_pk}/": {"get": {"operationId": "api_projects_reimports_read", "summary": "Get project reimport info", "description": "Return data related to async project reimport operation", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project reimport.", "type": "integer", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectReimport"}}}, "tags": ["Projects"], "x-fern-audiences": ["internal"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project reimport.", "required": true, "type": "integer"}, {"name": "reimport_pk", "in": "path", "required": true, "type": "string"}]}, "/api/projects/{id}/tasks/": {"get": {"operationId": "api_projects_tasks_list", "summary": "List project tasks", "description": "\nRetrieve a paginated list of tasks for a specific project. For example, use the following cURL command:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/tasks/?page=1&page_size=10 -H 'Authorization: Token abc123'\n```\n", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}, {"name": "page", "in": "query", "description": "[or \"start\"] current page", "type": "integer"}, {"name": "page_size", "in": "query", "description": "[or \"length\"] tasks per page, use -1 to obtain all tasks (in this case \"page\" has no effect and this operation might be slow)", "type": "integer"}], "responses": {"200": {"description": ""}}, "tags": ["Projects"], "x-fern-audiences": ["internal"]}, "delete": {"operationId": "api_projects_tasks_delete", "summary": "Delete all tasks", "description": "Delete all tasks from a specific project.", "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"204": {"description": "Tasks deleted"}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "delete_all_tasks", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/api/projects/{id}/validate/": {"post": {"operationId": "api_projects_validate_label_config", "summary": "Validate project label config", "description": "\nDetermine whether the label configuration for a specific project is valid.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectLabelConfig"}}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProjectLabelConfig"}}}, "tags": ["Projects"], "x-fern-sdk-group-name": "projects", "x-fern-sdk-method-name": "validate_config", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/api/storages/": {"get": {"operationId": "api_storages_list", "summary": "List all import storages from the project", "description": "Retrieve a list of the import storages of all types with their IDs.", "parameters": [], "responses": {"200": {"description": "List of ImportStorageSerializer"}}, "tags": ["Storage"], "x-fern-sdk-group-name": "import_storage", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/storages/azure/": {"get": {"operationId": "api_storages_azure_list", "summary": "Get all import storage", "description": "Get list of all Azure import storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/AzureBlobImportStorage"}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_azure_create", "summary": "Create new storage", "description": "Create new Azure import storage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/azure/validate": {"post": {"operationId": "api_storages_azure_validate_create", "summary": "Validate import storage", "description": "Validate a specific Azure import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"200": {"description": "OK"}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/azure/{id}": {"get": {"operationId": "api_storages_azure_read", "summary": "Get import storage", "description": "Get a specific Azure import storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AzureBlobImportStorage"}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_azure_partial_update", "summary": "Update import storage", "description": "Update a specific Azure import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_azure_delete", "summary": "Delete import storage", "description": "Delete a specific Azure import storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this azure blob import storage.", "required": true, "type": "integer"}]}, "/api/storages/azure/{id}/sync": {"post": {"operationId": "api_storages_azure_sync_create", "summary": "Sync import storage", "description": "Sync tasks from an Azure import storage connection.", "parameters": [{"name": "id", "in": "path", "description": "Storage ID", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AzureBlobImportStorage"}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["import_storage", "azure"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export": {"get": {"operationId": "api_storages_export_list", "summary": "List all export storages from the project", "description": "Retrieve a list of the export storages of all types with their IDs.", "parameters": [], "responses": {"200": {"description": "List of ExportStorageSerializer"}}, "tags": ["Storage"], "x-fern-sdk-group-name": "export_storage", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["internal"]}, "parameters": []}, "/api/storages/export/azure": {"get": {"operationId": "api_storages_export_azure_list", "summary": "Get all export storage", "description": "Get a list of all Azure export storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/AzureBlobExportStorage"}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_export_azure_create", "summary": "Create export storage", "description": "Create a new Azure export storage connection to store annotations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/azure/validate": {"post": {"operationId": "api_storages_export_azure_validate_create", "summary": "Validate export storage", "description": "Validate a specific Azure export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"200": {"description": "OK"}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/azure/{id}": {"get": {"operationId": "api_storages_export_azure_read", "summary": "Get export storage", "description": "Get a specific Azure export storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AzureBlobExportStorage"}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_export_azure_partial_update", "summary": "Update export storage", "description": "Update a specific Azure export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "container": {"description": "Azure blob container", "type": "string"}, "prefix": {"description": "Azure blob prefix name", "type": "string"}, "account_name": {"description": "Azure Blob account name", "type": "string"}, "account_key": {"description": "Azure Blob account key", "type": "string"}}}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_export_azure_delete", "summary": "Delete export storage", "description": "Delete a specific Azure export storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this azure blob export storage.", "required": true, "type": "integer"}]}, "/api/storages/export/azure/{id}/sync": {"post": {"operationId": "api_storages_export_azure_sync_create", "summary": "Sync export storage", "description": "Sync tasks from an Azure export storage connection.", "parameters": [], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AzureBlobExportStorage"}}}, "tags": ["Storage: Azure"], "x-fern-sdk-group-name": ["export_storage", "azure"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export/gcs": {"get": {"operationId": "api_storages_export_gcs_list", "summary": "Get all export storage", "description": "Get a list of all GCS export storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/GCSExportStorage"}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_export_gcs_create", "summary": "Create export storage", "description": "Create a new GCS export storage connection to store annotations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/gcs/validate": {"post": {"operationId": "api_storages_export_gcs_validate_create", "summary": "Validate export storage", "description": "Validate a specific GCS export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"200": {"description": "OK"}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/gcs/{id}": {"get": {"operationId": "api_storages_export_gcs_read", "summary": "Get export storage", "description": "Get a specific GCS export storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/GCSExportStorage"}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_export_gcs_partial_update", "summary": "Update export storage", "description": "Update a specific GCS export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_export_gcs_delete", "summary": "Delete export storage", "description": "Delete a specific GCS export storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this gcs export storage.", "required": true, "type": "integer"}]}, "/api/storages/export/gcs/{id}/sync": {"post": {"operationId": "api_storages_export_gcs_sync_create", "summary": "Sync export storage", "description": "Sync tasks from an GCS export storage connection.", "parameters": [], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/GCSExportStorage"}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["export_storage", "gcs"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export/localfiles": {"get": {"operationId": "api_storages_export_localfiles_list", "summary": "Get all export storage", "description": "Get a list of all Local export storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/LocalFilesExportStorage"}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_export_localfiles_create", "summary": "Create export storage", "description": "Create a new local file export storage connection to store annotations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/localfiles/validate": {"post": {"operationId": "api_storages_export_localfiles_validate_create", "summary": "Validate export storage", "description": "Validate a specific local file export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/localfiles/{id}": {"get": {"operationId": "api_storages_export_localfiles_read", "summary": "Get export storage", "description": "Get a specific local file export storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LocalFilesExportStorage"}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_export_localfiles_partial_update", "summary": "Update export storage", "description": "Update a specific local file export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_export_localfiles_delete", "summary": "Delete export storage", "description": "Delete a specific local file export storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this local files export storage.", "required": true, "type": "integer"}]}, "/api/storages/export/localfiles/{id}/sync": {"post": {"operationId": "api_storages_export_localfiles_sync_create", "summary": "Sync export storage", "description": "Sync tasks from a local file export storage connection.", "parameters": [], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/LocalFilesExportStorage"}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["export_storage", "local"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export/redis": {"get": {"operationId": "api_storages_export_redis_list", "summary": "Get all export storage", "description": "Get a list of all Redis export storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RedisExportStorage"}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_export_redis_create", "summary": "Create export storage", "description": "Create a new Redis export storage connection to store annotations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"db": {"description": "Database ID of database to use", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"db": {"description": "Database ID of database to use", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/redis/validate": {"post": {"operationId": "api_storages_export_redis_validate_create", "summary": "Validate export storage", "description": "Validate a specific Redis export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "db": {"description": "Database ID of database to use", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/redis/{id}": {"get": {"operationId": "api_storages_export_redis_read", "summary": "Get export storage", "description": "Get a specific Redis export storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RedisExportStorage"}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_export_redis_partial_update", "summary": "Update export storage", "description": "Update a specific Redis export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"db": {"description": "Database ID of database to use", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"db": {"description": "Database ID of database to use", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_export_redis_delete", "summary": "Delete export storage", "description": "Delete a specific Redis export storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this redis export storage.", "required": true, "type": "integer"}]}, "/api/storages/export/redis/{id}/sync": {"post": {"operationId": "api_storages_export_redis_sync_create", "summary": "Sync export storage", "description": "Sync tasks from a specific Redis export storage connection.", "parameters": [], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RedisExportStorage"}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["export_storage", "redis"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export/s3": {"get": {"operationId": "api_storages_export_s3_list", "summary": "Get all export storage", "description": "Get a list of all S3 export storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/S3ExportStorage"}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_export_s3_create", "summary": "Create export storage", "description": "Create a new S3 export storage connection to store annotations.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/s3/validate": {"post": {"operationId": "api_storages_export_s3_validate_create", "summary": "Validate export storage", "description": "Validate a specific S3 export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/export/s3/{id}": {"get": {"operationId": "api_storages_export_s3_read", "summary": "Get export storage", "description": "Get a specific S3 export storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/S3ExportStorage"}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_export_s3_partial_update", "summary": "Update export storage", "description": "Update a specific S3 export storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"can_delete_objects": {"description": "Deletion from storage enabled.", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_export_s3_delete", "summary": "Delete export storage", "description": "Delete a specific S3 export storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this s3 export storage.", "required": true, "type": "integer"}]}, "/api/storages/export/s3/{id}/sync": {"post": {"operationId": "api_storages_export_s3_sync_create", "summary": "Sync export storage", "description": "Sync tasks from an S3 export storage connection.", "parameters": [], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/S3ExportStorage"}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["export_storage", "s3"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/export/types": {"get": {"operationId": "api_storages_export_types_list", "summary": "List all export storages types", "description": "Retrieve a list of the export storages types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"title": "ExportStorageTypes", "description": "List of export storage types", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "title": {"type": "string"}}}}}}, "tags": ["Storage"], "x-fern-sdk-group-name": "export_storage", "x-fern-sdk-method-name": "list_types", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/gcs/": {"get": {"operationId": "api_storages_gcs_list", "summary": "Get all import storage", "description": "Get a list of all GCS import storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/GCSImportStorage"}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_gcs_create", "summary": "Create import storage", "description": "Create a new GCS import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/gcs/validate": {"post": {"operationId": "api_storages_gcs_validate_create", "summary": "Validate import storage", "description": "Validate a specific GCS import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"200": {"description": "OK"}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/gcs/{id}": {"get": {"operationId": "api_storages_gcs_read", "summary": "Get import storage", "description": "Get a specific GCS import storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/GCSImportStorage"}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_gcs_partial_update", "summary": "Update import storage", "description": "Update a specific GCS import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for direct download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "GCS bucket name", "type": "string"}, "prefix": {"description": "GCS bucket prefix", "type": "string"}, "google_application_credentials": {"description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file. Check official Google Cloud Authentication documentation for more details.", "type": "string"}, "google_project_id": {"description": "Google project ID", "type": "string"}}}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_gcs_delete", "summary": "Delete import storage", "description": "Delete a specific GCS import storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this gcs import storage.", "required": true, "type": "integer"}]}, "/api/storages/gcs/{id}/sync": {"post": {"operationId": "api_storages_gcs_sync_create", "summary": "Sync import storage", "description": "Sync tasks from an GCS import storage connection.", "parameters": [{"name": "id", "in": "path", "description": "Storage ID", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/GCSImportStorage"}}}, "tags": ["Storage: GCS"], "x-fern-sdk-group-name": ["import_storage", "gcs"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/localfiles/": {"get": {"operationId": "api_storages_localfiles_list", "summary": "Get all import storage", "description": "Get a list of all local file import storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/LocalFilesImportStorage"}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_localfiles_create", "summary": "Create import storage", "description": "Create a new local file import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/localfiles/validate": {"post": {"operationId": "api_storages_localfiles_validate_create", "summary": "Validate import storage", "description": "Validate a specific local file import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/localfiles/{id}": {"get": {"operationId": "api_storages_localfiles_read", "summary": "Get import storage", "description": "Get a specific local file import storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LocalFilesImportStorage"}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_localfiles_partial_update", "summary": "Update import storage", "description": "Update a specific local file import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Path to local directory", "type": "string"}, "regex_filter": {"description": "Regex for filtering objects", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your directory contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}}}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_localfiles_delete", "summary": "Delete import storage", "description": "Delete a specific local import storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this local files import storage.", "required": true, "type": "integer"}]}, "/api/storages/localfiles/{id}/sync": {"post": {"operationId": "api_storages_localfiles_sync_create", "summary": "Sync import storage", "description": "Sync tasks from a local file import storage connection.", "parameters": [{"name": "id", "in": "path", "description": "Storage ID", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/LocalFilesImportStorage"}}}, "tags": ["Storage: Local"], "x-fern-sdk-group-name": ["import_storage", "local"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/redis/": {"get": {"operationId": "api_storages_redis_list", "summary": "Get all import storage", "description": "Get a list of all Redis import storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RedisImportStorage"}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_redis_create", "summary": "Create import storage", "description": "Create a new Redis import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/redis/validate": {"post": {"operationId": "api_storages_redis_validate_create", "summary": "Validate import storage", "description": "Validate a specific Redis import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/redis/{id}": {"get": {"operationId": "api_storages_redis_read", "summary": "Get import storage", "description": "Get a specific Redis import storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RedisImportStorage"}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_redis_partial_update", "summary": "Update import storage", "description": "Update a specific Redis import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"required": [], "type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "path": {"description": "Storage prefix (optional)", "type": "string"}, "host": {"description": "Server Host IP (optional)", "type": "string"}, "port": {"description": "Server Port (optional)", "type": "string"}, "password": {"description": "Server Password (optional)", "type": "string"}}}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_redis_delete", "summary": "Delete import storage", "description": "Delete a specific Redis import storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this redis import storage.", "required": true, "type": "integer"}]}, "/api/storages/redis/{id}/sync": {"post": {"operationId": "api_storages_redis_sync_create", "summary": "Sync import storage", "description": "Sync tasks from a specific Redis import storage connection.", "parameters": [{"name": "id", "in": "path", "description": "Storage ID", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RedisImportStorage"}}}, "tags": ["Storage: Redis"], "x-fern-sdk-group-name": ["import_storage", "redis"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/s3/": {"get": {"operationId": "api_storages_s3_list", "summary": "List S3 import storage", "description": "Get a list of all S3 import storage connections.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/S3ImportStorage"}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_storages_s3_create", "summary": "Create new S3 storage", "description": "Create new S3 import storage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "recursive_scan": {"description": "Scan recursively", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"201": {"description": "", "schema": {"type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "recursive_scan": {"description": "Scan recursively", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/s3/validate": {"post": {"operationId": "api_storages_s3_validate_create", "summary": "Validate import storage", "description": "Validate a specific S3 import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"description": "Storage ID. If set, storage with specified ID will be updated", "type": "integer"}, "regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "recursive_scan": {"description": "Scan recursively", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"200": {"description": "Validation successful"}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "validate", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/storages/s3/{id}": {"get": {"operationId": "api_storages_s3_read", "summary": "Get import storage", "description": "Get a specific S3 import storage connection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/S3ImportStorage"}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_storages_s3_partial_update", "summary": "Update import storage", "description": "Update a specific S3 import storage connection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "recursive_scan": {"description": "Scan recursively", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"regex_filter": {"description": "Cloud storage regex for filtering objects. You must specify it otherwise no objects will be imported.", "type": "string"}, "use_blob_urls": {"description": "Interpret objects as BLOBs and generate URLs. For example, if your bucket contains images, you can use this option to generate URLs for these images. If set to False, it will read the content of the file and load it into Label Studio.", "type": "boolean", "default": false}, "presign": {"description": "Presign URLs for download", "type": "boolean", "default": true}, "presign_ttl": {"description": "Presign TTL in minutes", "type": "integer", "default": 1}, "recursive_scan": {"description": "Scan recursively", "type": "boolean"}, "title": {"description": "Storage title", "type": "string"}, "description": {"description": "Storage description", "type": "string"}, "project": {"description": "Project ID", "type": "integer"}, "bucket": {"description": "S3 bucket name", "type": "string"}, "prefix": {"description": "S3 bucket prefix", "type": "string"}, "aws_access_key_id": {"description": "AWS_ACCESS_KEY_ID", "type": "string"}, "aws_secret_access_key": {"description": "AWS_SECRET_ACCESS_KEY", "type": "string"}, "aws_session_token": {"description": "AWS_SESSION_TOKEN", "type": "string"}, "aws_sse_kms_key_id": {"description": "AWS SSE KMS Key ID", "type": "string"}, "region_name": {"description": "AWS Region", "type": "string"}, "s3_endpoint": {"description": "S3 Endpoint", "type": "string"}}}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_storages_s3_delete", "summary": "Delete import storage", "description": "Delete a specific S3 import storage connection.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this s3 import storage.", "required": true, "type": "integer"}]}, "/api/storages/s3/{id}/sync": {"post": {"operationId": "api_storages_s3_sync_create", "summary": "Sync import storage", "description": "Sync tasks from an S3 import storage connection.", "parameters": [{"name": "id", "in": "path", "description": "Storage ID", "type": "integer", "required": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/S3ImportStorage"}}}, "tags": ["Storage:S3"], "x-fern-sdk-group-name": ["import_storage", "s3"], "x-fern-sdk-method-name": "sync", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/storages/types": {"get": {"operationId": "api_storages_types_list", "summary": "List all import storages types", "description": "Retrieve a list of the import storages types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"title": "ImportStorageTypes", "description": "List of import storage types", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "title": {"type": "string"}}}}}}, "tags": ["Storage"], "x-fern-sdk-group-name": "import_storage", "x-fern-sdk-method-name": "list_types", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/tasks/": {"get": {"operationId": "api_tasks_list", "summary": "Get tasks list", "description": "\nRetrieve a list of tasks with pagination for a specific view or project, by using filters and ordering.\n", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "view", "in": "query", "description": "View ID", "type": "integer"}, {"name": "project", "in": "query", "description": "Project ID", "type": "integer"}, {"name": "resolve_uri", "in": "query", "description": "Resolve task data URIs using Cloud Storage", "type": "boolean"}, {"name": "fields", "in": "query", "description": "Set to \"all\" if you want to include annotations and predictions in the response", "type": "string", "enum": ["all", "task_only"], "default": "task_only"}, {"name": "review", "in": "query", "description": "Get tasks for review", "type": "boolean"}, {"name": "include", "in": "query", "description": "Specify which fields to include in the response", "type": "string"}, {"name": "query", "in": "query", "description": "Additional query to filter tasks. It must be JSON encoded string of dict containing one of the following parameters: `{\"filters\": ..., \"selectedItems\": ..., \"ordering\": ...}`. Check [Data Manager > Create View > see `data` field](#tag/Data-Manager/operation/api_dm_views_create) for more details about filters, selectedItems and ordering.\n\n* **filters**: dict with `\"conjunction\"` string (`\"or\"` or `\"and\"`) and list of filters in `\"items\"` array. Each filter is a dictionary with keys: `\"filter\"`, `\"operator\"`, `\"type\"`, `\"value\"`. [Read more about available filters](https://labelstud.io/sdk/data_manager.html)<br/>                   Example: `{\"conjunction\": \"or\", \"items\": [{\"filter\": \"filter:tasks:completed_at\", \"operator\": \"greater\", \"type\": \"Datetime\", \"value\": \"2021-01-01T00:00:00.000Z\"}]}`\n* **selectedItems**: dictionary with keys: `\"all\"`, `\"included\"`, `\"excluded\"`. If \"all\" is `false`, `\"included\"` must be used. If \"all\" is `true`, `\"excluded\"` must be used.<br/>                   Examples: `{\"all\": false, \"included\": [1, 2, 3]}` or `{\"all\": true, \"excluded\": [4, 5]}`\n* **ordering**: list of fields to order by. Currently, ordering is supported by only one parameter. <br/>\n                   Example: `[\"completed_at\"]`", "type": "string"}], "responses": {"200": {"description": "Tasks list", "schema": {"type": "object", "properties": {"tasks": {"description": "List of tasks", "type": "array", "items": {"description": "Task object", "type": "object"}}, "total": {"description": "Total number of tasks", "type": "integer"}, "total_annotations": {"description": "Total number of annotations", "type": "integer"}, "total_predictions": {"description": "Total number of predictions", "type": "integer"}}}}}, "tags": ["Tasks"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "list", "x-fern-pagination": {"offset": "$request.page", "results": "$response.tasks"}, "x-fern-audiences": ["public"]}, "post": {"operationId": "api_tasks_create", "summary": "Create task", "description": "Create a new labeling task in Label Studio.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"data": {"title": "Task data", "description": "Task data dictionary with arbitrary keys and values", "type": "object", "example": {"image": "https://example.com/image.jpg", "text": "Hello, world!"}}, "project": {"description": "Project ID", "type": "integer"}}, "example": {"data": {"image": "https://example.com/image.jpg", "text": "Hello, world!"}, "project": 1}}}], "responses": {"201": {"description": "Created task", "schema": {"$ref": "#/definitions/BaseTask"}, "examples": {"application/json": {"id": 1, "data": {"image": "https://example.com/image.jpg", "text": "Hello, AI!"}, "project": 1, "created_at": "2024-06-18T23:45:46.048490Z", "updated_at": "2024-06-18T23:45:46.048538Z", "is_labeled": false, "overlap": 1, "inner_id": 1, "total_annotations": 0, "cancelled_annotations": 0, "total_predictions": 0, "comment_count": 0, "unresolved_comment_count": 0, "last_comment_updated_at": "2024-01-15T09:30:00Z", "updated_by": [{"user_id": 1}], "file_upload": "42d46c4c-my-pic.jpeg", "comment_authors": [1]}}}}, "tags": ["Tasks"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/tasks/{id}/": {"get": {"operationId": "api_tasks_read", "summary": "Get task", "description": "\nGet task data, metadata, annotations and other attributes for a specific labeling task by task ID.\n", "parameters": [{"name": "id", "in": "path", "description": "Task ID", "type": "string", "required": true}], "responses": {"200": {"description": "Task", "schema": {"$ref": "#/definitions/data_manager_task_serializer"}, "examples": {"application/json": {"id": 13, "predictions": [], "annotations": [], "drafts": [], "annotators": [], "inner_id": 2, "cancelled_annotations": 0, "total_annotations": 0, "total_predictions": 0, "completed_at": null, "annotations_results": "", "predictions_results": "", "predictions_score": null, "file_upload": "6b25fc23-some_3.mp4", "storage_filename": null, "annotations_ids": "", "predictions_model_versions": "", "avg_lead_time": null, "draft_exists": false, "updated_by": [], "data": {"image": "/data/upload/1/6b25fc23-some_3.mp4"}, "meta": {}, "created_at": "2024-06-18T23:45:46.048490Z", "updated_at": "2024-06-18T23:45:46.048538Z", "is_labeled": false, "overlap": 1, "comment_count": 0, "unresolved_comment_count": 0, "last_comment_updated_at": null, "project": 1, "comment_authors": []}}}}, "tags": ["Tasks"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_tasks_partial_update", "summary": "Update task", "description": "Update the attributes of an existing labeling task.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"data": {"title": "Task data", "description": "Task data dictionary with arbitrary keys and values", "type": "object", "example": {"image": "https://example.com/image.jpg", "text": "Hello, world!"}}, "project": {"description": "Project ID", "type": "integer"}}, "example": {"data": {"image": "https://example.com/image.jpg", "text": "Hello, world!"}, "project": 1}}}, {"name": "id", "in": "path", "description": "Task ID", "type": "string", "required": true}], "responses": {"200": {"description": "Updated task", "schema": {"$ref": "#/definitions/BaseTask"}, "examples": {"application/json": {"id": 1, "data": {"image": "https://example.com/image.jpg", "text": "Hello, AI!"}, "project": 1, "created_at": "2024-06-18T23:45:46.048490Z", "updated_at": "2024-06-18T23:45:46.048538Z", "is_labeled": false, "overlap": 1, "inner_id": 1, "total_annotations": 0, "cancelled_annotations": 0, "total_predictions": 0, "comment_count": 0, "unresolved_comment_count": 0, "last_comment_updated_at": "2024-01-15T09:30:00Z", "updated_by": [{"user_id": 1}], "file_upload": "42d46c4c-my-pic.jpeg", "comment_authors": [1]}}}}, "tags": ["Tasks"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_tasks_delete", "summary": "Delete task", "description": "Delete a task in Label Studio. This action cannot be undone!", "parameters": [{"name": "id", "in": "path", "description": "Task ID", "type": "string", "required": true}], "responses": {"204": {"description": ""}}, "tags": ["Tasks"], "x-fern-sdk-group-name": "tasks", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/tasks/{id}/annotations/": {"get": {"operationId": "api_tasks_annotations_list", "summary": "Get all task annotations", "description": "List all annotations for a task.", "parameters": [{"name": "id", "in": "path", "description": "Task ID", "type": "integer", "required": true}], "responses": {"200": {"description": "Annotation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Annotation"}}, "examples": {"application/json": [{"id": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "task": 1, "project": 1, "completed_by": 1, "updated_by": 1, "was_cancelled": false, "ground_truth": false, "lead_time": 10}]}}}, "tags": ["Annotations"], "x-fern-sdk-group-name": "annotations", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_tasks_annotations_create", "summary": "Create annotation", "description": "\nAdd annotations to a task like an annotator does. The content of the result field depends on your \nlabeling configuration. For example, send the following data as part of your POST \nrequest to send an empty annotation with the ID of the user who completed the task:\n\n```json\n{\n\"result\": {},\n\"was_cancelled\": true,\n\"ground_truth\": true,\n\"lead_time\": 0,\n\"task\": 0\n\"completed_by\": 123\n} \n```\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": [], "type": "object", "properties": {"result": {"description": "Labeling result in JSON format. Read more about the format in [the Label Studio documentation.](https://labelstud.io/guide/task_format)", "type": "array", "items": {"type": "object"}, "example": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}]}, "task": {"description": "Corresponding task for this annotation", "type": "integer"}, "project": {"description": "Project ID for this annotation", "type": "integer"}, "completed_by": {"description": "User ID of the person who created this annotation", "type": "integer"}, "updated_by": {"description": "Last user who updated this annotation", "type": "integer"}, "was_cancelled": {"description": "User skipped the task", "type": "boolean"}, "ground_truth": {"description": "This annotation is a Ground Truth", "type": "boolean"}, "lead_time": {"description": "How much time it took to annotate the task (in seconds)", "type": "number", "example": 100.5}}, "example": {"result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "was_cancelled": false, "ground_truth": true}}}, {"name": "id", "in": "path", "description": "Task ID", "type": "integer", "required": true}], "responses": {"201": {"description": "Created annotation", "schema": {"$ref": "#/definitions/Annotation"}, "examples": {"application/json": {"id": 1, "result": [{"original_width": 1920, "original_height": 1080, "image_rotation": 0, "from_name": "bboxes", "to_name": "image", "type": "rectanglelabels", "value": {"x": 20, "y": 30, "width": 50, "height": 60, "rotation": 0, "values": {"rectanglelabels": ["Person"]}}}], "task": 1, "project": 1, "completed_by": 1, "updated_by": 1, "was_cancelled": false, "ground_truth": false, "lead_time": 10}}}}, "tags": ["Annotations"], "x-fern-sdk-group-name": "annotations", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/users/": {"get": {"operationId": "api_users_list", "summary": "List users", "description": "List the users that exist on the Label Studio server.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/BaseUser"}}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_users_create", "summary": "Create new user", "description": "Create a user in Label Studio.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"description": "User ID", "type": "integer"}, "first_name": {"description": "First name of the user", "type": "string"}, "last_name": {"description": "Last name of the user", "type": "string"}, "username": {"description": "Username of the user", "type": "string"}, "email": {"description": "Email of the user", "type": "string"}, "avatar": {"description": "Avatar URL of the user", "type": "string"}, "initials": {"description": "Initials of the user", "type": "string"}, "phone": {"description": "Phone number of the user", "type": "string"}, "allow_newsletters": {"description": "Whether the user allows newsletters", "type": "boolean"}}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/BaseUser"}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/users/{id}/": {"get": {"operationId": "api_users_read", "summary": "Get user info", "description": "Get info about a specific Label Studio user, based on the user ID.", "parameters": [{"name": "id", "in": "path", "description": "User ID", "type": "integer", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BaseUser"}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "patch": {"operationId": "api_users_partial_update", "summary": "Update user details", "description": "\nUpdate details for a specific user, such as their name or contact information, in Label Studio.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"description": "User ID", "type": "integer"}, "first_name": {"description": "First name of the user", "type": "string"}, "last_name": {"description": "Last name of the user", "type": "string"}, "username": {"description": "Username of the user", "type": "string"}, "email": {"description": "Email of the user", "type": "string"}, "avatar": {"description": "Avatar URL of the user", "type": "string"}, "initials": {"description": "Initials of the user", "type": "string"}, "phone": {"description": "Phone number of the user", "type": "string"}, "allow_newsletters": {"description": "Whether the user allows newsletters", "type": "boolean"}}}}, {"name": "id", "in": "path", "description": "User ID", "type": "integer", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BaseUser"}}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_users_delete", "summary": "Delete user", "description": "Delete a specific Label Studio user.", "parameters": [{"name": "id", "in": "path", "description": "User ID", "type": "integer", "required": true}], "responses": {"204": {"description": ""}}, "tags": ["Users"], "x-fern-sdk-group-name": "users", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/webhooks/": {"get": {"operationId": "api_webhooks_list", "summary": "List all webhooks", "description": "List all webhooks set up for your organization.", "parameters": [{"name": "project", "in": "query", "description": "Project ID", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Webhook"}}}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "list", "x-fern-audiences": ["public"]}, "post": {"operationId": "api_webhooks_create", "summary": "Create a webhook", "description": "Create a webhook for your organization.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Webhook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "create", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/webhooks/info/": {"get": {"operationId": "api_webhooks_info_list", "summary": "Get all webhook actions", "description": "Get descriptions of all available webhook actions to set up webhooks.", "parameters": [{"name": "organization-only", "in": "query", "description": "organization-only or not", "type": "boolean"}], "responses": {"200": {"description": "Object with description data."}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "info", "x-fern-audiences": ["public"]}, "parameters": []}, "/api/webhooks/{id}/": {"get": {"operationId": "api_webhooks_read", "summary": "Get webhook info", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "get", "x-fern-audiences": ["public"]}, "put": {"operationId": "api_webhooks_update", "summary": "Save webhook info", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebhookSerializerForUpdate"}}, {"name": "url", "in": "query", "description": "URL of webhook", "required": true, "type": "string", "format": "uri", "maxLength": 2048, "minLength": 1}, {"name": "send_payload", "in": "query", "description": "If value is False send only action", "required": false, "type": "boolean"}, {"name": "send_for_all_actions", "in": "query", "description": "If value is False - used only for actions from WebhookAction", "required": false, "type": "boolean"}, {"name": "headers", "in": "query", "description": "Key Value Json of headers", "required": false, "type": "string"}, {"name": "is_active", "in": "query", "description": "If value is False the webhook is disabled", "required": false, "type": "boolean"}, {"name": "actions", "in": "query", "required": false, "type": "array", "items": {"type": "string", "enum": ["PROJECT_CREATED", "PROJECT_UPDATED", "PROJECT_DELETED", "TASKS_CREATED", "TASKS_DELETED", "ANNOTATION_CREATED", "ANNOTATIONS_CREATED", "ANNOTATION_UPDATED", "ANNOTATIONS_DELETED", "LABEL_LINK_CREATED", "LABEL_LINK_UPDATED", "LABEL_LINK_DELETED"]}, "default": []}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebhookSerializerForUpdate"}}}, "tags": ["Webhooks"], "x-fern-audiences": ["internal"]}, "patch": {"operationId": "api_webhooks_partial_update", "summary": "Update webhook info", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebhookSerializerForUpdate"}}, {"name": "url", "in": "query", "description": "URL of webhook", "required": true, "type": "string", "format": "uri", "maxLength": 2048, "minLength": 1}, {"name": "send_payload", "in": "query", "description": "If value is False send only action", "required": false, "type": "boolean"}, {"name": "send_for_all_actions", "in": "query", "description": "If value is False - used only for actions from WebhookAction", "required": false, "type": "boolean"}, {"name": "headers", "in": "query", "description": "Key Value Json of headers", "required": false, "type": "string"}, {"name": "is_active", "in": "query", "description": "If value is False the webhook is disabled", "required": false, "type": "boolean"}, {"name": "actions", "in": "query", "required": false, "type": "array", "items": {"type": "string", "enum": ["PROJECT_CREATED", "PROJECT_UPDATED", "PROJECT_DELETED", "TASKS_CREATED", "TASKS_DELETED", "ANNOTATION_CREATED", "ANNOTATIONS_CREATED", "ANNOTATION_UPDATED", "ANNOTATIONS_DELETED", "LABEL_LINK_CREATED", "LABEL_LINK_UPDATED", "LABEL_LINK_DELETED"]}, "default": []}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebhookSerializerForUpdate"}}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "update", "x-fern-audiences": ["public"]}, "delete": {"operationId": "api_webhooks_delete", "summary": "Delete webhook info", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["Webhooks"], "x-fern-sdk-group-name": "webhooks", "x-fern-sdk-method-name": "delete", "x-fern-audiences": ["public"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this webhook.", "required": true, "type": "integer"}]}, "/data/upload/{filename}": {"get": {"operationId": "data_upload_read", "summary": "Download file", "description": "Download a specific uploaded file.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["Import"], "x-fern-sdk-group-name": ["files"], "x-fern-sdk-method-name": "download", "x-fern-audiences": ["public"]}, "parameters": [{"name": "filename", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"Annotation": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "result": {"title": "Annotation result list", "type": "array", "description": "List of annotation results for the task", "items": {"type": "object", "title": "Annotation result items (regions)", "description": "List of annotated regions for the task"}}, "created_username": {"title": "Created username", "description": "Username string", "type": "string", "readOnly": true}, "created_ago": {"title": "Created ago", "description": "Time delta from creation time", "type": "string", "readOnly": true, "default": "", "minLength": 1}, "completed_by": {"title": "Completed by", "type": "integer"}, "unique_id": {"title": "Unique id", "type": "string", "minLength": 1}, "was_cancelled": {"title": "Was cancelled", "description": "User skipped the task", "type": "boolean"}, "ground_truth": {"title": "Ground_truth", "description": "This annotation is a Ground Truth (ground_truth)", "type": "boolean"}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last updated time", "type": "string", "format": "date-time", "readOnly": true}, "draft_created_at": {"title": "Draft created at", "description": "Draft creation time", "type": "string", "format": "date-time", "x-nullable": true}, "lead_time": {"title": "Lead time", "description": "How much time it took to annotate the task", "type": "number", "x-nullable": true}, "import_id": {"title": "Import id", "description": "Original annotation ID that was at the import step or NULL if this annotation wasn't imported", "type": "integer", "x-nullable": true}, "last_action": {"title": "Last action", "description": "Action which was performed in the last annotation history item", "type": "string", "enum": ["prediction", "propagated_annotation", "imported", "submitted", "updated", "skipped", "accepted", "rejected", "fixed_and_accepted", "deleted_review"], "x-nullable": true}, "task": {"title": "Task", "description": "Corresponding task for this annotation", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "description": "Project ID for this annotation", "type": "integer", "x-nullable": true}, "updated_by": {"title": "Updated by", "description": "Last user who updated this annotation", "type": "integer", "x-nullable": true}, "parent_prediction": {"title": "Parent prediction", "description": "Points to the prediction from which this annotation was created", "type": "integer", "x-nullable": true}, "parent_annotation": {"title": "Parent annotation", "description": "Points to the parent annotation from which this annotation was created", "type": "integer", "x-nullable": true}, "last_created_by": {"title": "Last created by", "description": "User who created the last annotation history item", "type": "integer", "x-nullable": true}}}, "BaseUser": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 256}, "last_name": {"title": "Last name", "type": "string", "maxLength": 256}, "username": {"title": "Username", "type": "string", "maxLength": 256, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "last_activity": {"title": "Last activity", "type": "string", "format": "date-time", "readOnly": true}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true}, "initials": {"title": "Initials", "type": "string", "readOnly": true}, "phone": {"title": "Phone", "type": "string", "maxLength": 256}, "active_organization": {"title": "Active organization", "type": "integer", "x-nullable": true}, "allow_newsletters": {"title": "Allow newsletters", "description": "Allow sending newsletters to user", "type": "boolean", "x-nullable": true}}}, "Filter": {"required": ["column", "type", "operator"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "index": {"title": "Index", "description": "To keep filter order", "type": "integer"}, "column": {"title": "Column", "description": "Field name", "type": "string", "maxLength": 1024, "minLength": 1}, "type": {"title": "Type", "description": "Field type", "type": "string", "maxLength": 1024, "minLength": 1}, "operator": {"title": "Operator", "description": "Filter operator", "type": "string", "maxLength": 1024, "minLength": 1}, "value": {"title": "Value", "description": "Filter value", "type": "object", "x-nullable": true}}}, "FilterGroup": {"required": ["filters", "conjunction"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "filters": {"type": "array", "items": {"$ref": "#/definitions/Filter"}}, "conjunction": {"title": "Conjunction", "description": "Type of conjunction", "type": "string", "maxLength": 1024, "minLength": 1}}}, "View": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "filter_group": {"$ref": "#/definitions/FilterGroup"}, "data": {"title": "Data", "description": "Custom view data", "type": "object", "x-nullable": true}, "ordering": {"title": "Ordering", "description": "Ordering parameters", "type": "object", "x-nullable": true}, "order": {"title": "Order", "description": "Position of the tab, starting at the left in data manager and increasing as the tabs go left to right", "type": "integer", "x-nullable": true}, "selected_items": {"title": "Selected items", "description": "Selected items", "type": "object", "x-nullable": true}, "user": {"title": "User", "description": "User who made this view", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "description": "Project ID", "type": "integer"}}}, "ViewOrder": {"required": ["project", "ids"], "type": "object", "properties": {"project": {"title": "Project", "type": "integer"}, "ids": {"description": "A list of view IDs in the desired order.", "type": "array", "items": {"type": "integer"}}}}, "ViewReset": {"required": ["project"], "type": "object", "properties": {"project": {"title": "Project", "type": "integer"}}}, "FileUpload": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "file": {"title": "File", "type": "string", "readOnly": true}}}, "OrganizationInvite": {"type": "object", "properties": {"token": {"title": "Token", "type": "string", "minLength": 1}, "invite_url": {"title": "Invite url", "type": "string", "minLength": 1}}}, "LabelLink": {"required": ["from_name", "project", "label"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "annotations_count": {"title": "Annotations count", "type": "integer", "readOnly": true}, "from_name": {"title": "Tag name", "description": "Tag name", "type": "string", "maxLength": 2048, "minLength": 1}, "project": {"title": "Project", "type": "integer"}, "label": {"title": "Label", "type": "integer"}}}, "Label": {"required": ["value", "title", "created_by", "organization"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "links": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "description": "Time of label creation", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Time of label modification", "type": "string", "format": "date-time", "readOnly": true}, "value": {"title": "Value", "description": "Label value", "type": "object"}, "title": {"title": "Title", "description": "Label title", "type": "string", "maxLength": 2048, "minLength": 1}, "description": {"title": "Description", "description": "Label description", "type": "string", "x-nullable": true}, "approved": {"title": "Approved", "description": "Status of label", "type": "boolean"}, "created_by": {"title": "Created by", "description": "User who made this label", "type": "integer"}, "approved_by": {"title": "Approved by", "description": "User who approved this label", "type": "integer", "x-nullable": true}, "organization": {"title": "Organization", "type": "integer"}, "projects": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}}}, "LabelCreate": {"required": ["project", "from_name", "value", "title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_by": {"title": "Created by", "type": "integer", "readOnly": true}, "organization": {"title": "Organization", "type": "integer", "readOnly": true}, "project": {"title": "Project", "type": "integer"}, "from_name": {"title": "From name", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "description": "Time of label creation", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Time of label modification", "type": "string", "format": "date-time", "readOnly": true}, "value": {"title": "Value", "description": "Label value", "type": "object"}, "title": {"title": "Title", "description": "Label title", "type": "string", "maxLength": 2048, "minLength": 1}, "description": {"title": "Description", "description": "Label description", "type": "string", "x-nullable": true}, "approved": {"title": "Approved", "description": "Status of label", "type": "boolean"}, "approved_by": {"title": "Approved by", "description": "User who approved this label", "type": "integer", "x-nullable": true}, "projects": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}}}, "MLBackend": {"required": ["url", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "state": {"title": "State", "type": "string", "enum": ["CO", "DI", "ER", "TR", "PR"]}, "readable_state": {"title": "Readable state", "type": "string", "readOnly": true}, "is_interactive": {"title": "Is_interactive", "description": "Used to interactively annotate tasks. If true, model returns one list with results", "type": "boolean"}, "url": {"title": "Url", "description": "URL for the machine learning model server", "type": "string", "minLength": 1}, "error_message": {"title": "Error_message", "description": "Error message in error state", "type": "string", "x-nullable": true}, "title": {"title": "Title", "description": "Name of the machine learning backend", "type": "string", "x-nullable": true}, "auth_method": {"title": "Auth method", "type": "string", "enum": ["NONE", "BASIC_AUTH"]}, "basic_auth_user": {"title": "Basic auth user", "description": "HTTP Basic Auth user", "type": "string", "x-nullable": true}, "basic_auth_pass": {"title": "Basic auth pass", "type": "string", "x-nullable": true}, "basic_auth_pass_is_set": {"title": "Basic auth pass is set", "type": "string", "readOnly": true}, "description": {"title": "Description", "description": "Description for the machine learning backend", "type": "string", "x-nullable": true}, "extra_params": {"title": "Extra params", "description": "Any extra parameters passed to the ML Backend during the setup", "type": "object", "x-nullable": true}, "model_version": {"title": "Model version", "description": "Current model version associated with this machine learning backend", "type": "string", "x-nullable": true}, "timeout": {"title": "Timeout", "description": "Response model timeout", "type": "number"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "auto_update": {"title": "Auto_update", "description": "If false, model version is set by the user, if true - getting latest version from backend.", "type": "boolean"}, "project": {"title": "Project", "type": "integer"}}}, "MLInteractiveAnnotatingRequest": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "ID of task to annotate", "type": "integer"}, "context": {"title": "Context", "description": "Context for ML model", "type": "object", "x-nullable": true}}}, "OrganizationId": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Organization title", "type": "string", "maxLength": 1000, "minLength": 1}, "contact_info": {"title": "Contact info", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}}}, "Organization": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Organization title", "type": "string", "maxLength": 1000, "minLength": 1}, "token": {"title": "Token", "type": "string", "maxLength": 256, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "contact_info": {"title": "Contact info", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "created_by": {"title": "Created_by", "type": "integer", "x-nullable": true}, "users": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}}}, "UserSerializerWithProjects": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 256}, "last_name": {"title": "Last name", "type": "string", "maxLength": 256}, "username": {"title": "Username", "type": "string", "maxLength": 256, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "last_activity": {"title": "Last activity", "type": "string", "format": "date-time", "readOnly": true}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true}, "initials": {"title": "Initials", "type": "string", "readOnly": true}, "phone": {"title": "Phone", "type": "string", "maxLength": 256}, "active_organization": {"title": "Active organization", "type": "integer", "x-nullable": true}, "allow_newsletters": {"title": "Allow newsletters", "description": "Allow sending newsletters to user", "type": "boolean", "x-nullable": true}, "created_projects": {"title": "Created projects", "type": "string", "readOnly": true}, "contributed_to_projects": {"title": "Contributed to projects", "type": "string", "readOnly": true}}}, "OrganizationMemberUser": {"required": ["organization", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "organization": {"title": "Organization", "description": "Organization ID", "type": "integer"}, "user": {"$ref": "#/definitions/UserSerializerWithProjects"}}}, "Prediction": {"required": ["result", "task"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "result": {"title": "Prediction result list", "type": "array", "description": "List of prediction results for the task", "items": {"type": "object", "title": "Prediction result items (regions)", "description": "List of predicted regions for the task"}}, "model_version": {"title": "Model version", "description": "Model version - tag for predictions that can be used to filter tasks in Data Manager, as well as select specific model version for showing preannotations in the labeling interface", "type": "string"}, "created_ago": {"title": "Created ago", "description": "Delta time from creation time", "type": "string", "readOnly": true, "default": "", "minLength": 1}, "score": {"title": "Score", "description": "Prediction score", "type": "number", "x-nullable": true}, "cluster": {"title": "Cluster", "description": "Cluster for the current prediction", "type": "integer", "x-nullable": true}, "neighbors": {"title": "Neighbors", "description": "Array of task IDs of the closest neighbors", "type": "object", "x-nullable": true}, "mislabeling": {"title": "Mislabeling", "description": "Related task mislabeling score", "type": "number"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "model": {"title": "Model", "description": "An ML Backend instance that created the prediction.", "type": "integer", "x-nullable": true}, "model_run": {"title": "Model run", "description": "A run of a ModelVersion that created the prediction.", "type": "integer", "x-nullable": true}, "task": {"title": "Task", "type": "integer"}, "project": {"title": "Project", "type": "integer", "x-nullable": true}}}, "UserSimple": {"description": "Project owner", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 256}, "last_name": {"title": "Last name", "type": "string", "maxLength": 256}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true}}}, "Project": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "description": "Project name. Must be between 3 and 50 characters long.", "type": "string", "maxLength": 50, "minLength": 3, "x-nullable": true}, "description": {"title": "Description", "description": "Project description", "type": "string", "x-nullable": true}, "label_config": {"title": "Label config", "description": "Label config in XML format. See more about it in documentation", "type": "string", "x-nullable": true}, "expert_instruction": {"title": "Expert instruction", "description": "Labeling instructions in HTML format", "type": "string", "x-nullable": true}, "show_instruction": {"title": "Show instruction", "description": "Show instructions to the annotator before they start", "type": "boolean"}, "show_skip_button": {"title": "Show skip button", "description": "Show a skip button in interface and allow annotators to skip the task", "type": "boolean"}, "enable_empty_annotation": {"title": "Enable empty annotation", "description": "Allow annotators to submit empty annotations", "type": "boolean"}, "show_annotation_history": {"title": "Show annotation history", "description": "Show annotation history to annotator", "type": "boolean"}, "organization": {"title": "Organization", "type": "integer", "x-nullable": true}, "color": {"title": "Color", "type": "string", "maxLength": 16, "x-nullable": true}, "maximum_annotations": {"title": "Maximum annotation number", "description": "Maximum number of annotations for one task. If the number of annotations per task is equal or greater to this value, the task is completed (is_labeled=True)", "type": "integer"}, "is_published": {"title": "Published", "description": "Whether or not the project is published to annotators", "type": "boolean"}, "model_version": {"title": "Model version", "description": "Machine learning model version", "type": "string", "x-nullable": true}, "is_draft": {"title": "Is draft", "description": "Whether or not the project is in the middle of being created", "type": "boolean"}, "created_by": {"$ref": "#/definitions/UserSimple"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "min_annotations_to_start_training": {"title": "Min_annotations_to_start_training", "description": "Minimum number of completed tasks after which model training is started", "type": "integer"}, "start_training_on_annotation_update": {"title": "Start training on annotation update", "description": "Start model training after any annotations are submitted or updated", "type": "string", "readOnly": true}, "show_collab_predictions": {"title": "Show predictions to annotator", "description": "If set, the annotator can view model predictions", "type": "boolean"}, "num_tasks_with_annotations": {"title": "Num tasks with annotations", "description": "Tasks with annotations count", "type": "integer", "readOnly": true}, "task_number": {"title": "Task number", "description": "Total task number in project", "type": "integer", "readOnly": true}, "useful_annotation_number": {"title": "Useful annotation number", "description": "Useful annotation number in project not including skipped_annotations_number and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number + ground_truth_number", "type": "integer", "readOnly": true}, "ground_truth_number": {"title": "Ground truth number", "description": "Honeypot annotation number in project", "type": "integer", "readOnly": true}, "skipped_annotations_number": {"title": "Skipped annotations number", "description": "Skipped by collaborators annotation number in project", "type": "integer", "readOnly": true}, "total_annotations_number": {"title": "Total annotations number", "description": "Total annotations number in project including skipped_annotations_number and ground_truth_number.", "type": "integer", "readOnly": true}, "total_predictions_number": {"title": "Total predictions number", "description": "Total predictions number in project including skipped_annotations_number, ground_truth_number, and useful_annotation_number.", "type": "integer", "readOnly": true}, "sampling": {"title": "Sampling", "type": "string", "enum": ["Sequential sampling", "Uniform sampling", "Uncertainty sampling"], "x-nullable": true}, "show_ground_truth_first": {"title": "Show ground truth first", "type": "boolean"}, "show_overlap_first": {"title": "Show overlap first", "type": "boolean"}, "overlap_cohort_percentage": {"title": "Overlap_cohort_percentage", "type": "integer"}, "task_data_login": {"title": "Task_data_login", "description": "Task data credentials: login", "type": "string", "maxLength": 256, "x-nullable": true}, "task_data_password": {"title": "Task_data_password", "description": "Task data credentials: password", "type": "string", "maxLength": 256, "x-nullable": true}, "control_weights": {"title": "Control weights", "description": "Dict of weights for each control tag in metric calculation. Each control tag (e.g. label or choice) will have it's own key in control weight dict with weight for each label and overall weight.For example, if bounding box annotation with control tag named my_bbox should be included with 0.33 weight in agreement calculation, and the first label Car should be twice more important than Airplaine, then you have to need the specify: {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplaine': 0.5}, 'overall': 0.33}", "type": "object", "x-nullable": true}, "parsed_label_config": {"title": "Parsed label config", "description": "JSON-formatted labeling configuration", "type": "object", "readOnly": true}, "evaluate_predictions_automatically": {"title": "Evaluate predictions automatically", "description": "Retrieve and display predictions when loading a task", "type": "boolean"}, "config_has_control_tags": {"title": "Config has control tags", "description": "Flag to detect is project ready for labeling", "type": "string", "readOnly": true}, "skip_queue": {"title": "Skip queue", "type": "string", "enum": ["REQUEUE_FOR_ME", "REQUEUE_FOR_OTHERS", "IGNORE_SKIPPED"], "x-nullable": true}, "reveal_preannotations_interactively": {"title": "Reveal_preannotations_interactively", "description": "Reveal pre-annotations interactively", "type": "boolean"}, "pinned_at": {"title": "Pinned at", "description": "Pinned date and time", "type": "string", "format": "date-time", "x-nullable": true}, "finished_task_number": {"title": "Finished task number", "description": "Finished tasks", "type": "integer", "readOnly": true}, "queue_total": {"title": "Queue total", "type": "string", "readOnly": true}, "queue_done": {"title": "Queue done", "type": "string", "readOnly": true}}}, "ProjectLabelConfig": {"required": ["label_config"], "type": "object", "properties": {"label_config": {"title": "Label config", "description": "Label config in XML format. See more about it in documentation", "type": "string", "minLength": 1}}}, "ConvertedFormat": {"required": ["export_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["created", "in_progress", "failed", "completed"]}, "export_type": {"title": "Export type", "type": "string", "maxLength": 64, "minLength": 1}, "traceback": {"title": "Traceback", "description": "Traceback report in case of errors", "type": "string", "x-nullable": true}}}, "Export": {"type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 2048}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "created_by": {"$ref": "#/definitions/UserSimple"}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "finished_at": {"title": "Finished at", "description": "Complete or fail time", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Export status", "type": "string", "enum": ["created", "in_progress", "failed", "completed"]}, "md5": {"title": "Md5 of file", "type": "string", "maxLength": 128, "minLength": 1}, "counters": {"title": "Exporting meta data", "type": "object"}, "converted_formats": {"type": "array", "items": {"$ref": "#/definitions/ConvertedFormat"}}}}, "TaskFilterOptions": {"type": "object", "properties": {"view": {"title": "View", "description": "Apply filters from the view ID (a tab from the Data Manager)", "type": "integer"}, "skipped": {"title": "Skipped", "description": "`only` - include all tasks with skipped annotations<br>`exclude` - exclude all tasks with skipped annotations", "type": "string", "enum": ["only", "exclude", null], "x-nullable": true}, "finished": {"title": "Finished", "description": "`only` - include all finished tasks (is_labeled = true)<br>`exclude` - exclude all finished tasks", "type": "string", "enum": ["only", "exclude", null], "x-nullable": true}, "annotated": {"title": "Annotated", "description": "`only` - include all tasks with at least one not skipped annotation<br>`exclude` - exclude all tasks with at least one not skipped annotation", "type": "string", "enum": ["only", "exclude", null], "x-nullable": true}, "only_with_annotations": {"title": "Only with annotations", "type": "boolean", "default": false}}}, "AnnotationFilterOptions": {"type": "object", "properties": {"usual": {"title": "Usual", "description": "Include not skipped and not ground truth annotations", "type": "boolean", "default": true, "x-nullable": true}, "ground_truth": {"title": "Ground truth", "description": "Include ground truth annotations", "type": "boolean", "x-nullable": true}, "skipped": {"title": "Skipped", "description": "Include skipped annotations", "type": "boolean", "x-nullable": true}}}, "SerializationOption": {"description": "JSON dict with parameters", "type": "object", "properties": {"only_id": {"title": "Only id", "description": "Include a full json body or IDs only", "type": "boolean", "default": false}}}, "SerializationOptions": {"type": "object", "properties": {"drafts": {"$ref": "#/definitions/SerializationOption"}, "predictions": {"$ref": "#/definitions/SerializationOption"}, "include_annotation_history": {"title": "Include annotation history", "description": "Include annotation history", "type": "boolean", "default": false}, "annotations__completed_by": {"$ref": "#/definitions/SerializationOption"}, "interpolate_key_frames": {"title": "Interpolate key frames", "description": "Interpolate video key frames", "type": "boolean", "default": false}}}, "ExportCreate": {"type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 2048}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "created_by": {"$ref": "#/definitions/UserSimple"}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "finished_at": {"title": "Finished at", "description": "Complete or fail time", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Export status", "type": "string", "enum": ["created", "in_progress", "failed", "completed"]}, "md5": {"title": "Md5 of file", "type": "string", "maxLength": 128, "minLength": 1}, "counters": {"title": "Exporting meta data", "type": "object"}, "converted_formats": {"type": "array", "items": {"$ref": "#/definitions/ConvertedFormat"}}, "task_filter_options": {"$ref": "#/definitions/TaskFilterOptions"}, "annotation_filter_options": {"$ref": "#/definitions/AnnotationFilterOptions"}, "serialization_options": {"$ref": "#/definitions/SerializationOptions"}}}, "ExportConvert": {"required": ["export_type"], "type": "object", "properties": {"export_type": {"title": "Export type", "description": "Export file format.", "type": "string", "minLength": 1}}}, "ProjectImport": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "preannotated_from_fields": {"title": "Preannotated from fields", "type": "object", "x-nullable": true}, "commit_to_project": {"title": "Commit to project", "type": "boolean"}, "return_task_ids": {"title": "Return task ids", "type": "boolean"}, "status": {"title": "Status", "type": "string", "enum": ["created", "in_progress", "failed", "completed"]}, "url": {"title": "Url", "type": "string", "maxLength": 2048, "x-nullable": true}, "traceback": {"title": "Traceback", "type": "string", "x-nullable": true}, "error": {"title": "Error", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "description": "Updated time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "finished_at": {"title": "Finished at", "description": "Complete or fail time", "type": "string", "format": "date-time", "x-nullable": true}, "task_count": {"title": "Task count", "type": "integer"}, "annotation_count": {"title": "Annotation count", "type": "integer"}, "prediction_count": {"title": "Prediction count", "type": "integer"}, "duration": {"title": "Duration", "type": "integer"}, "file_upload_ids": {"title": "File upload ids", "type": "object"}, "could_be_tasks_list": {"title": "Could be tasks list", "type": "boolean"}, "found_formats": {"title": "Found formats", "type": "object"}, "data_columns": {"title": "Data columns", "type": "object"}, "tasks": {"title": "Tasks", "type": "object", "x-nullable": true}, "task_ids": {"title": "Task ids", "type": "object"}, "project": {"title": "Project", "type": "integer", "x-nullable": true}}}, "ProjectReimport": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["created", "in_progress", "failed", "completed"]}, "error": {"title": "Error", "type": "string", "x-nullable": true}, "task_count": {"title": "Task count", "type": "integer"}, "annotation_count": {"title": "Annotation count", "type": "integer"}, "prediction_count": {"title": "Prediction count", "type": "integer"}, "duration": {"title": "Duration", "type": "integer"}, "file_upload_ids": {"title": "File upload ids", "type": "object"}, "files_as_tasks_list": {"title": "Files as tasks list", "type": "boolean"}, "found_formats": {"title": "Found formats", "type": "object"}, "data_columns": {"title": "Data columns", "type": "object"}, "traceback": {"title": "Traceback", "type": "string", "x-nullable": true}, "project": {"title": "Project", "type": "integer", "x-nullable": true}}}, "AzureBlobImportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "azure"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "presign": {"title": "Presign", "type": "boolean", "default": true}, "container": {"title": "Container", "description": "Azure blob container", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "Azure blob prefix name", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "account_name": {"title": "Account_name", "description": "Azure Blob account name", "type": "string", "x-nullable": true}, "account_key": {"title": "Account_key", "description": "Azure Blob account key", "type": "string", "x-nullable": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "presign_ttl": {"title": "Presign_ttl", "description": "Presigned URLs TTL (in minutes)", "type": "integer"}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "AzureBlobExportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "azure"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "container": {"title": "Container", "description": "Azure blob container", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "Azure blob prefix name", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "account_name": {"title": "Account_name", "description": "Azure Blob account name", "type": "string", "x-nullable": true}, "account_key": {"title": "Account_key", "description": "Azure Blob account key", "type": "string", "x-nullable": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "can_delete_objects": {"title": "Can_delete_objects", "description": "Deletion from storage enabled", "type": "boolean", "x-nullable": true}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "GCSExportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "gcs"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "bucket": {"title": "Bucket", "description": "GCS bucket name", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "GCS bucket prefix", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "google_application_credentials": {"title": "Google_application_credentials", "description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file", "type": "string", "x-nullable": true}, "google_project_id": {"title": "Google Project ID", "description": "Google project ID", "type": "string", "x-nullable": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "can_delete_objects": {"title": "Can_delete_objects", "description": "Deletion from storage enabled", "type": "boolean", "x-nullable": true}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "LocalFilesExportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "localfiles"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "path": {"title": "Path", "description": "Local path", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "can_delete_objects": {"title": "Can_delete_objects", "description": "Deletion from storage enabled", "type": "boolean", "x-nullable": true}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "RedisExportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "redis"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "path": {"title": "Path", "description": "Storage prefix (optional)", "type": "string", "x-nullable": true}, "host": {"title": "Host", "description": "Server Host IP (optional)", "type": "string", "x-nullable": true}, "port": {"title": "Port", "description": "Server Port (optional)", "type": "string", "x-nullable": true}, "password": {"title": "Password", "description": "Server Password (optional)", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Port", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "can_delete_objects": {"title": "Can_delete_objects", "description": "Deletion from storage enabled", "type": "boolean", "x-nullable": true}, "db": {"title": "Db", "description": "Server Database", "type": "integer"}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "S3ExportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "s3"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "can_delete_objects": {"title": "Can_delete_objects", "description": "Deletion from storage enabled", "type": "boolean", "x-nullable": true}, "bucket": {"title": "Bucket", "description": "S3 bucket name", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "S3 bucket prefix", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "aws_access_key_id": {"title": "Aws_access_key_id", "description": "AWS_ACCESS_KEY_ID", "type": "string", "x-nullable": true}, "aws_secret_access_key": {"title": "Aws_secret_access_key", "description": "AWS_SECRET_ACCESS_KEY", "type": "string", "x-nullable": true}, "aws_session_token": {"title": "Aws_session_token", "description": "AWS_SESSION_TOKEN", "type": "string", "x-nullable": true}, "aws_sse_kms_key_id": {"title": "Aws_sse_kms_key_id", "description": "AWS SSE KMS Key ID", "type": "string", "x-nullable": true}, "region_name": {"title": "Region_name", "description": "AWS Region", "type": "string", "x-nullable": true}, "s3_endpoint": {"title": "S3_endpoint", "description": "S3 Endpoint", "type": "string", "x-nullable": true}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "GCSImportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "gcs"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "presign": {"title": "Presign", "type": "boolean", "default": true}, "bucket": {"title": "Bucket", "description": "GCS bucket name", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "GCS bucket prefix", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "google_application_credentials": {"title": "Google_application_credentials", "description": "The content of GOOGLE_APPLICATION_CREDENTIALS json file", "type": "string", "x-nullable": true}, "google_project_id": {"title": "Google Project ID", "description": "Google project ID", "type": "string", "x-nullable": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "presign_ttl": {"title": "Presign_ttl", "description": "Presigned URLs TTL (in minutes)", "type": "integer"}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "LocalFilesImportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "localfiles"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "path": {"title": "Path", "description": "Local path", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "RedisImportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "redis"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "path": {"title": "Path", "description": "Storage prefix (optional)", "type": "string", "x-nullable": true}, "host": {"title": "Host", "description": "Server Host IP (optional)", "type": "string", "x-nullable": true}, "port": {"title": "Port", "description": "Server Port (optional)", "type": "string", "x-nullable": true}, "password": {"title": "Password", "description": "Server Password (optional)", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Port", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "db": {"title": "Db", "description": "Server Database", "type": "integer"}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "S3ImportStorage": {"required": ["project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "readOnly": true, "default": "s3"}, "synchronizable": {"title": "Synchronizable", "type": "boolean", "default": true}, "presign": {"title": "Presign", "type": "boolean", "default": true}, "last_sync": {"title": "Last sync", "description": "Last sync finished time", "type": "string", "format": "date-time", "x-nullable": true}, "last_sync_count": {"title": "Last sync count", "description": "Count of tasks synced last time", "type": "integer", "x-nullable": true}, "last_sync_job": {"title": "Last_sync_job", "description": "Last sync job ID", "type": "string", "maxLength": 256, "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["initialized", "queued", "in_progress", "failed", "completed"]}, "traceback": {"title": "Traceback", "description": "Traceback report for the last failed sync", "type": "string", "x-nullable": true}, "meta": {"title": "Meta", "description": "Meta and debug information about storage processes", "type": "object", "x-nullable": true}, "title": {"title": "Title", "description": "Cloud storage title", "type": "string", "maxLength": 256, "x-nullable": true}, "description": {"title": "Description", "description": "Cloud storage description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "bucket": {"title": "Bucket", "description": "S3 bucket name", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "S3 bucket prefix", "type": "string", "x-nullable": true}, "regex_filter": {"title": "Regex_filter", "description": "Cloud storage regex for filtering objects", "type": "string", "x-nullable": true}, "use_blob_urls": {"title": "Use_blob_urls", "description": "Interpret objects as BLOBs and generate URLs", "type": "boolean"}, "aws_access_key_id": {"title": "Aws_access_key_id", "description": "AWS_ACCESS_KEY_ID", "type": "string", "x-nullable": true}, "aws_secret_access_key": {"title": "Aws_secret_access_key", "description": "AWS_SECRET_ACCESS_KEY", "type": "string", "x-nullable": true}, "aws_session_token": {"title": "Aws_session_token", "description": "AWS_SESSION_TOKEN", "type": "string", "x-nullable": true}, "aws_sse_kms_key_id": {"title": "Aws_sse_kms_key_id", "description": "AWS SSE KMS Key ID", "type": "string", "x-nullable": true}, "region_name": {"title": "Region_name", "description": "AWS Region", "type": "string", "x-nullable": true}, "s3_endpoint": {"title": "S3_endpoint", "description": "S3 Endpoint", "type": "string", "x-nullable": true}, "presign_ttl": {"title": "Presign_ttl", "description": "Presigned URLs TTL (in minutes)", "type": "integer"}, "recursive_scan": {"title": "Recursive scan", "description": "Perform recursive scan over the bucket content", "type": "boolean"}, "project": {"title": "Project", "description": "A unique integer value identifying this project.", "type": "integer"}}}, "BaseTask": {"required": ["data"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "data": {"title": "Data", "description": "User imported or uploaded data for a task. Data is formatted according to the project label config. You can find examples of data for your project on the Import page in the Label Studio Data Manager UI.", "type": "object"}, "meta": {"title": "Meta", "description": "Meta is user imported (uploaded) data and can be useful as input for an ML Backend for embeddings, advanced vectors, and other info. It is passed to ML during training/predicting steps.", "type": "object", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Time a task was created", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last time a task was updated", "type": "string", "format": "date-time", "readOnly": true}, "is_labeled": {"title": "Is_labeled", "description": "True if the number of annotations for this task is greater than or equal to the number of maximum_completions for the project", "type": "boolean"}, "overlap": {"title": "Overlap", "description": "Number of distinct annotators that processed the current task", "type": "integer"}, "inner_id": {"title": "Inner id", "description": "Internal task ID in the project, starts with 1", "type": "integer", "x-nullable": true}, "total_annotations": {"title": "Total_annotations", "description": "Number of total annotations for the current task except cancelled annotations", "type": "integer"}, "cancelled_annotations": {"title": "Cancelled_annotations", "description": "Number of total cancelled annotations for the current task", "type": "integer"}, "total_predictions": {"title": "Total_predictions", "description": "Number of total predictions for the current task", "type": "integer"}, "comment_count": {"title": "Comment count", "description": "Number of comments in the task including all annotations", "type": "integer"}, "unresolved_comment_count": {"title": "Unresolved comment count", "description": "Number of unresolved comments in the task including all annotations", "type": "integer"}, "last_comment_updated_at": {"title": "Last comment updated at", "description": "When the last comment was updated", "type": "string", "format": "date-time", "x-nullable": true}, "project": {"title": "Project", "description": "Project ID for this task", "type": "integer", "x-nullable": true}, "updated_by": {"title": "Updated by", "description": "Last annotator or reviewer who updated this task", "type": "integer", "x-nullable": true}, "file_upload": {"title": "File upload", "description": "Uploaded file used as data source for this task", "type": "integer", "x-nullable": true}, "comment_authors": {"description": "Users who wrote comments", "type": "array", "items": {"description": "Users who wrote comments", "type": "integer"}, "uniqueItems": true}}}, "AnnotationsDMField": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "result": {"title": "Annotation result list", "type": "array", "description": "List of annotation results for the task", "items": {"type": "object", "title": "Annotation result items (regions)", "description": "List of annotated regions for the task"}}, "created_username": {"title": "Created username", "description": "Username string", "type": "string", "readOnly": true}, "created_ago": {"title": "Created ago", "description": "Time delta from creation time", "type": "string", "readOnly": true, "default": "", "minLength": 1}, "completed_by": {"title": "User details", "type": "object", "description": "User details who completed this annotation."}, "unique_id": {"title": "Unique id", "type": "string", "minLength": 1}, "was_cancelled": {"title": "Was cancelled", "description": "User skipped the task", "type": "boolean"}, "ground_truth": {"title": "Ground_truth", "description": "This annotation is a Ground Truth (ground_truth)", "type": "boolean"}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last updated time", "type": "string", "format": "date-time", "readOnly": true}, "draft_created_at": {"title": "Draft created at", "description": "Draft creation time", "type": "string", "format": "date-time", "x-nullable": true}, "lead_time": {"title": "Lead time", "description": "How much time it took to annotate the task", "type": "number", "x-nullable": true}, "import_id": {"title": "Import id", "description": "Original annotation ID that was at the import step or NULL if this annotation wasn't imported", "type": "integer", "x-nullable": true}, "last_action": {"title": "Last action", "description": "Action which was performed in the last annotation history item", "type": "string", "enum": ["prediction", "propagated_annotation", "imported", "submitted", "updated", "skipped", "accepted", "rejected", "fixed_and_accepted", "deleted_review"], "x-nullable": true}, "task": {"title": "Task", "description": "Corresponding task for this annotation", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "description": "Project ID for this annotation", "type": "integer", "x-nullable": true}, "updated_by": {"title": "Updated by", "description": "Last user who updated this annotation", "type": "integer", "x-nullable": true}, "parent_prediction": {"title": "Parent prediction", "description": "Points to the prediction from which this annotation was created", "type": "integer", "x-nullable": true}, "parent_annotation": {"title": "Parent annotation", "description": "Points to the parent annotation from which this annotation was created", "type": "integer", "x-nullable": true}, "last_created_by": {"title": "Last created by", "description": "User who created the last annotation history item", "type": "integer", "x-nullable": true}}}, "data_manager_task_serializer": {"required": ["data"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "predictions": {"title": "Predictions", "type": "array", "readOnly": true, "description": "Predictions for this task", "items": {"type": "object", "title": "Prediction object", "properties": {"result": {"type": "array", "title": "Prediction result", "items": {"type": "object", "title": "Prediction result item"}}, "score": {"type": "number", "title": "Prediction score"}, "model_version": {"type": "string", "title": "Model version"}, "model": {"type": "object", "title": "ML Backend instance"}, "model_run": {"type": "object", "title": "Model Run instance"}, "task": {"type": "integer", "title": "Task ID related to the prediction"}, "project": {"type": "number", "title": "Project ID related to the prediction"}, "created_at": {"type": "string", "format": "date-time", "title": "Creation time"}, "updated_at": {"type": "string", "format": "date-time", "title": "Last update time"}}}}, "annotations": {"type": "array", "items": {"$ref": "#/definitions/AnnotationsDMField"}, "readOnly": true, "default": []}, "drafts": {"title": "Annotation drafts", "type": "array", "readOnly": true, "description": "Drafts for this task", "items": {"type": "object", "title": "Draft object", "properties": {"result": {"type": "array", "title": "Draft result", "items": {"type": "object", "title": "Draft result item"}}, "created_at": {"type": "string", "format": "date-time", "title": "Creation time"}, "updated_at": {"type": "string", "format": "date-time", "title": "Last update time"}}}}, "annotators": {"title": "Annotators IDs", "type": "array", "readOnly": true, "description": "Annotators IDs who annotated this task", "items": {"type": "integer", "title": "User IDs"}}, "inner_id": {"title": "Inner id", "type": "integer"}, "cancelled_annotations": {"title": "Cancelled annotations", "type": "integer"}, "total_annotations": {"title": "Total annotations", "type": "integer"}, "total_predictions": {"title": "Total predictions", "type": "integer"}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time"}, "annotations_results": {"title": "Annotations results", "type": "string", "readOnly": true}, "predictions_results": {"title": "Predictions results", "type": "string", "readOnly": true}, "predictions_score": {"title": "Predictions score", "type": "number"}, "file_upload": {"title": "File upload", "type": "string", "readOnly": true}, "storage_filename": {"title": "Storage filename", "type": "string", "readOnly": true}, "annotations_ids": {"title": "Annotations ids", "type": "string", "readOnly": true}, "predictions_model_versions": {"title": "Predictions model versions", "type": "string", "readOnly": true}, "avg_lead_time": {"title": "Avg lead time", "type": "number"}, "draft_exists": {"title": "Draft exists", "type": "boolean"}, "updated_by": {"title": "User IDs", "type": "array", "readOnly": true, "description": "User IDs who updated this task", "items": {"type": "object", "title": "User IDs"}}, "data": {"title": "Data", "description": "User imported or uploaded data for a task. Data is formatted according to the project label config. You can find examples of data for your project on the Import page in the Label Studio Data Manager UI.", "type": "object"}, "meta": {"title": "Meta", "description": "Meta is user imported (uploaded) data and can be useful as input for an ML Backend for embeddings, advanced vectors, and other info. It is passed to ML during training/predicting steps.", "type": "object", "x-nullable": true}, "created_at": {"title": "Created at", "description": "Time a task was created", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last time a task was updated", "type": "string", "format": "date-time", "readOnly": true}, "is_labeled": {"title": "Is_labeled", "description": "True if the number of annotations for this task is greater than or equal to the number of maximum_completions for the project", "type": "boolean"}, "overlap": {"title": "Overlap", "description": "Number of distinct annotators that processed the current task", "type": "integer"}, "comment_count": {"title": "Comment count", "description": "Number of comments in the task including all annotations", "type": "integer"}, "unresolved_comment_count": {"title": "Unresolved comment count", "description": "Number of unresolved comments in the task including all annotations", "type": "integer"}, "last_comment_updated_at": {"title": "Last comment updated at", "description": "When the last comment was updated", "type": "string", "format": "date-time", "x-nullable": true}, "project": {"title": "Project", "description": "Project ID for this task", "type": "integer", "x-nullable": true}, "comment_authors": {"description": "Users who wrote comments", "type": "array", "items": {"description": "Users who wrote comments", "type": "integer"}, "uniqueItems": true}}}, "Webhook": {"required": ["url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "organization": {"title": "Organization", "type": "integer", "readOnly": true}, "project": {"title": "Project", "type": "integer", "x-nullable": true}, "url": {"title": "URL of webhook", "description": "URL of webhook", "type": "string", "format": "uri", "maxLength": 2048, "minLength": 1}, "send_payload": {"title": "Does webhook send the payload", "description": "If value is False send only action", "type": "boolean"}, "send_for_all_actions": {"title": "Use webhook for all actions", "description": "If value is False - used only for actions from WebhookAction", "type": "boolean"}, "headers": {"title": "Request extra headers of webhook", "description": "Key Value Json of headers", "type": "object"}, "is_active": {"title": "Is webhook active", "description": "If value is False the webhook is disabled", "type": "boolean"}, "actions": {"type": "array", "items": {"type": "string", "enum": ["PROJECT_CREATED", "PROJECT_UPDATED", "PROJECT_DELETED", "TASKS_CREATED", "TASKS_DELETED", "ANNOTATION_CREATED", "ANNOTATIONS_CREATED", "ANNOTATION_UPDATED", "ANNOTATIONS_DELETED", "LABEL_LINK_CREATED", "LABEL_LINK_UPDATED", "LABEL_LINK_DELETED"]}, "default": []}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last update time", "type": "string", "format": "date-time", "readOnly": true}}}, "WebhookSerializerForUpdate": {"required": ["url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "organization": {"title": "Organization", "type": "integer", "readOnly": true}, "project": {"title": "Project", "type": "integer", "readOnly": true, "x-nullable": true}, "url": {"title": "URL of webhook", "description": "URL of webhook", "type": "string", "format": "uri", "maxLength": 2048, "minLength": 1}, "send_payload": {"title": "Does webhook send the payload", "description": "If value is False send only action", "type": "boolean"}, "send_for_all_actions": {"title": "Use webhook for all actions", "description": "If value is False - used only for actions from WebhookAction", "type": "boolean"}, "headers": {"title": "Request extra headers of webhook", "description": "Key Value Json of headers", "type": "object"}, "is_active": {"title": "Is webhook active", "description": "If value is False the webhook is disabled", "type": "boolean"}, "actions": {"type": "array", "items": {"type": "string", "enum": ["PROJECT_CREATED", "PROJECT_UPDATED", "PROJECT_DELETED", "TASKS_CREATED", "TASKS_DELETED", "ANNOTATION_CREATED", "ANNOTATIONS_CREATED", "ANNOTATION_UPDATED", "ANNOTATIONS_DELETED", "LABEL_LINK_CREATED", "LABEL_LINK_UPDATED", "LABEL_LINK_DELETED"]}, "default": []}, "created_at": {"title": "Created at", "description": "Creation time", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Last update time", "type": "string", "format": "date-time", "readOnly": true}}}}}